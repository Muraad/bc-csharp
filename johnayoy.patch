Index: bzip2/src/CBZip2InputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/bzip2/src/CBZip2InputStream.cs,v
retrieving revision 1.4
diff -u -r1.4 CBZip2InputStream.cs
--- bzip2/src/CBZip2InputStream.cs	23 May 2010 15:44:56 -0000	1.4
+++ bzip2/src/CBZip2InputStream.cs	12 Feb 2013 05:55:22 -0000
@@ -289,7 +289,11 @@
 		private void BsFinishedWithStream() {
             try {
                 if (this.bsStream != null) {
+#if PORTABLE
+                    this.bsStream.Dispose();
+#else
                     this.bsStream.Close();
+#endif
                     this.bsStream = null;
                 }
             } catch {
Index: bzip2/src/CBZip2OutputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/bzip2/src/CBZip2OutputStream.cs,v
retrieving revision 1.4
diff -u -r1.4 CBZip2OutputStream.cs
--- bzip2/src/CBZip2OutputStream.cs	11 Dec 2009 03:43:14 -0000	1.4
+++ bzip2/src/CBZip2OutputStream.cs	12 Feb 2013 05:55:22 -0000
@@ -384,7 +384,12 @@
 //            Close();
 //        }
 
+#if PORTABLE
+        public virtual void Close()
+        {
+#else
         public override void Close() {
+#endif
             if (closed) {
                 return;
             }
@@ -392,8 +397,13 @@
             Finish();
 
             closed = true;
+#if PORTABLE
+            base.Dispose();
+            bsStream.Dispose();
+#else
             base.Close();
             bsStream.Close();
+#endif
         }
 
         public void Finish() {
Index: src/AssemblyInfo.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/AssemblyInfo.cs,v
retrieving revision 1.13
diff -u -r1.13 AssemblyInfo.cs
--- src/AssemblyInfo.cs	6 Apr 2011 16:26:55 -0000	1.13
+++ src/AssemblyInfo.cs	12 Feb 2013 05:55:22 -0000
@@ -70,7 +70,9 @@
 [assembly: AssemblyKeyName("")]
 
 [assembly: CLSCompliant(true)]
+#if !PORTABLE
 [assembly: ComVisible(false)]
+#endif
 
 // Start with no permissions
 //[assembly: PermissionSet(SecurityAction.RequestOptional, Unrestricted=false)]
Index: src/asn1/Asn1Exception.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/Asn1Exception.cs,v
retrieving revision 1.3
diff -u -r1.3 Asn1Exception.cs
--- src/asn1/Asn1Exception.cs	24 Jan 2013 06:53:43 -0000	1.3
+++ src/asn1/Asn1Exception.cs	12 Feb 2013 07:36:38 -0000
@@ -3,7 +3,7 @@
 
 namespace Org.BouncyCastle.Asn1
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class Asn1Exception
Index: src/asn1/Asn1ParsingException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/Asn1ParsingException.cs,v
retrieving revision 1.2
diff -u -r1.2 Asn1ParsingException.cs
--- src/asn1/Asn1ParsingException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/asn1/Asn1ParsingException.cs	12 Feb 2013 07:35:21 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Asn1
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class Asn1ParsingException
Index: src/asn1/DerGeneralizedTime.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/DerGeneralizedTime.cs,v
retrieving revision 1.15
diff -u -r1.15 DerGeneralizedTime.cs
--- src/asn1/DerGeneralizedTime.cs	6 Apr 2011 15:39:03 -0000	1.15
+++ src/asn1/DerGeneralizedTime.cs	12 Feb 2013 05:55:22 -0000
@@ -159,8 +159,8 @@
 			char sign = '+';
             DateTime time = ToDateTime();
 
-#if SILVERLIGHT
-			long offset = time.Ticks - time.ToUniversalTime().Ticks;
+#if (SILVERLIGHT || PORTABLE)
+            long offset = time.Ticks - time.ToUniversalTime().Ticks;
 			if (offset < 0)
 			{
 				sign = '-';
Index: src/asn1/cms/AttributeTable.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/cms/AttributeTable.cs,v
retrieving revision 1.19
diff -u -r1.19 AttributeTable.cs
--- src/asn1/cms/AttributeTable.cs	25 Feb 2011 04:36:31 -0000	1.19
+++ src/asn1/cms/AttributeTable.cs	12 Feb 2013 05:55:22 -0000
@@ -10,7 +10,7 @@
     {
         private readonly IDictionary attributes;
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public AttributeTable(
             Hashtable attrs)
@@ -168,7 +168,7 @@
             return Platform.CreateHashtable(attributes);
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete("Use 'ToDictionary' instead")]
 		public Hashtable ToHashtable()
         {
Index: src/asn1/nist/NISTNamedCurves.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/nist/NISTNamedCurves.cs,v
retrieving revision 1.14
diff -u -r1.14 NISTNamedCurves.cs
--- src/asn1/nist/NISTNamedCurves.cs	21 Jan 2013 13:04:23 -0000	1.14
+++ src/asn1/nist/NISTNamedCurves.cs	12 Feb 2013 08:57:07 -0000
@@ -19,7 +19,7 @@
 		}
 
 		private static readonly IDictionary objIds = Platform.CreateHashtable();
-        private static readonly IDictionary names = Platform.CreateHashtable();
+		private static readonly IDictionary names = Platform.CreateHashtable();
 
 		private static void DefineCurve(
 			string				name,
@@ -46,8 +46,7 @@
 		public static X9ECParameters GetByName(
 			string name)
 		{
-			DerObjectIdentifier oid = (DerObjectIdentifier) objIds[
-                Platform.ToUpperInvariant(name)];
+		    DerObjectIdentifier oid = (DerObjectIdentifier)objIds[Platform.ToUpperInvariant(name)];
 
             if (oid != null)
 			{
@@ -78,8 +77,7 @@
 		public static DerObjectIdentifier GetOid(
 			string name)
 		{
-			return (DerObjectIdentifier) objIds[
-                Platform.ToUpperInvariant(name)];
+		    return (DerObjectIdentifier)objIds[Platform.ToUpperInvariant(name)];
 		}
 
 		/**
Index: src/asn1/sec/SECNamedCurves.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/sec/SECNamedCurves.cs,v
retrieving revision 1.21
diff -u -r1.21 SECNamedCurves.cs
--- src/asn1/sec/SECNamedCurves.cs	21 Jan 2013 13:04:23 -0000	1.21
+++ src/asn1/sec/SECNamedCurves.cs	12 Feb 2013 05:55:22 -0000
@@ -1084,8 +1084,8 @@
 
 
 		private static readonly IDictionary objIds = Platform.CreateHashtable();
-        private static readonly IDictionary curves = Platform.CreateHashtable();
-        private static readonly IDictionary names = Platform.CreateHashtable();
+		private static readonly IDictionary curves = Platform.CreateHashtable();
+		private static readonly IDictionary names = Platform.CreateHashtable();
 
 		private static void DefineCurve(
 			string					name,
Index: src/asn1/smime/SMIMECapabilities.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/smime/SMIMECapabilities.cs,v
retrieving revision 1.24
diff -u -r1.24 SMIMECapabilities.cs
--- src/asn1/smime/SMIMECapabilities.cs	19 Sep 2010 07:34:49 -0000	1.24
+++ src/asn1/smime/SMIMECapabilities.cs	12 Feb 2013 05:55:22 -0000
@@ -65,7 +65,7 @@
             capabilities = seq;
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete("Use 'GetCapabilitiesForOid' instead")]
         public ArrayList GetCapabilities(
             DerObjectIdentifier capability)
Index: src/asn1/util/Dump.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/util/Dump.cs,v
retrieving revision 1.15
diff -u -r1.15 Dump.cs
--- src/asn1/util/Dump.cs	8 Nov 2007 14:53:39 -0000	1.15
+++ src/asn1/util/Dump.cs	12 Feb 2013 05:55:22 -0000
@@ -1,3 +1,4 @@
+#if !PORTABLE
 using Org.BouncyCastle.Asn1;
 
 using System;
@@ -26,3 +27,4 @@
         }
     }
 }
+#endif
\ No newline at end of file
Index: src/asn1/util/FilterStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/util/FilterStream.cs,v
retrieving revision 1.9
diff -u -r1.9 FilterStream.cs
--- src/asn1/util/FilterStream.cs	19 Feb 2011 07:55:25 -0000	1.9
+++ src/asn1/util/FilterStream.cs	12 Feb 2013 05:55:22 -0000
@@ -30,10 +30,18 @@
             get { return s.Position; }
             set { s.Position = value; }
         }
+#if PORTABLE
+        public virtual void Close()
+        {
+            s.Dispose();
+        }
+#else
         public override void Close()
         {
             s.Close();
         }
+#endif
+
         public override void Flush()
         {
             s.Flush();
Index: src/asn1/x509/AttributeTable.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/x509/AttributeTable.cs,v
retrieving revision 1.21
diff -u -r1.21 AttributeTable.cs
--- src/asn1/x509/AttributeTable.cs	19 Sep 2010 07:34:49 -0000	1.21
+++ src/asn1/x509/AttributeTable.cs	12 Feb 2013 05:55:22 -0000
@@ -16,7 +16,7 @@
             this.attributes = Platform.CreateHashtable(attrs);
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public AttributeTable(
             Hashtable attrs)
@@ -25,7 +25,7 @@
         }
 #endif
 
-		public AttributeTable(
+        public AttributeTable(
             Asn1EncodableVector v)
         {
             this.attributes = Platform.CreateHashtable(v.Count);
@@ -57,7 +57,7 @@
             return (AttributeX509) attributes[oid];
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete("Use 'ToDictionary' instead")]
 		public Hashtable ToHashtable()
         {
Index: src/asn1/x509/ExtendedKeyUsage.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/x509/ExtendedKeyUsage.cs,v
retrieving revision 1.22
diff -u -r1.22 ExtendedKeyUsage.cs
--- src/asn1/x509/ExtendedKeyUsage.cs	19 Sep 2010 07:34:49 -0000	1.22
+++ src/asn1/x509/ExtendedKeyUsage.cs	12 Feb 2013 05:55:22 -0000
@@ -70,7 +70,7 @@
 			}
 		}
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public ExtendedKeyUsage(
             ArrayList usages)
@@ -100,7 +100,7 @@
             return usageTable[keyPurposeId] != null;
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete("Use 'GetAllUsages'")]
         public ArrayList GetUsages()
         {
Index: src/asn1/x509/NameConstraints.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/x509/NameConstraints.cs,v
retrieving revision 1.22
diff -u -r1.22 NameConstraints.cs
--- src/asn1/x509/NameConstraints.cs	19 Sep 2010 07:34:49 -0000	1.22
+++ src/asn1/x509/NameConstraints.cs	12 Feb 2013 05:55:22 -0000
@@ -41,7 +41,7 @@
 			}
 		}
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         public NameConstraints(
             ArrayList permitted,
             ArrayList excluded)
Index: src/asn1/x509/NoticeReference.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/x509/NoticeReference.cs,v
retrieving revision 1.22
diff -u -r1.22 NoticeReference.cs
--- src/asn1/x509/NoticeReference.cs	19 Sep 2010 07:34:49 -0000	1.22
+++ src/asn1/x509/NoticeReference.cs	12 Feb 2013 05:55:22 -0000
@@ -24,7 +24,7 @@
 		internal readonly DisplayText organization;
 		internal readonly Asn1Sequence noticeNumbers;
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public NoticeReference(
             string orgName,
Index: src/asn1/x509/PolicyMappings.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/x509/PolicyMappings.cs,v
retrieving revision 1.15
diff -u -r1.15 PolicyMappings.cs
--- src/asn1/x509/PolicyMappings.cs	19 Sep 2010 07:34:49 -0000	1.15
+++ src/asn1/x509/PolicyMappings.cs	12 Feb 2013 05:55:22 -0000
@@ -29,7 +29,7 @@
 			this.seq = seq;
 		}
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         public PolicyMappings(
             Hashtable mappings)
             : this((IDictionary)mappings)
Index: src/asn1/x509/SubjectDirectoryAttributes.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/x509/SubjectDirectoryAttributes.cs,v
retrieving revision 1.12
diff -u -r1.12 SubjectDirectoryAttributes.cs
--- src/asn1/x509/SubjectDirectoryAttributes.cs	18 Nov 2011 10:41:09 -0000	1.12
+++ src/asn1/x509/SubjectDirectoryAttributes.cs	12 Feb 2013 05:55:22 -0000
@@ -78,7 +78,7 @@
 			}
 		}
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public SubjectDirectoryAttributes(
             ArrayList attributes)
Index: src/asn1/x509/X509Extensions.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/x509/X509Extensions.cs,v
retrieving revision 1.44
diff -u -r1.44 X509Extensions.cs
--- src/asn1/x509/X509Extensions.cs	1 Feb 2011 06:43:34 -0000	1.44
+++ src/asn1/x509/X509Extensions.cs	12 Feb 2013 05:55:22 -0000
@@ -278,7 +278,7 @@
             }
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
 		/**
          * constructor from a table of extensions.
          * <p>
Index: src/asn1/x509/X509Name.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/asn1/x509/X509Name.cs,v
retrieving revision 1.72
diff -u -r1.72 X509Name.cs
--- src/asn1/x509/X509Name.cs	21 Jan 2013 13:04:23 -0000	1.72
+++ src/asn1/x509/X509Name.cs	12 Feb 2013 05:55:22 -0000
@@ -3,7 +3,7 @@
 using System.IO;
 using System.Text;
 
-#if SILVERLIGHT
+#if SILVERLIGHT || PORTABLE
 using System.Collections.Generic;
 #endif
 
@@ -203,8 +203,8 @@
 
 		private static readonly bool[] defaultReverse = { false };
 
-#if SILVERLIGHT
-		/**
+#if SILVERLIGHT || PORTABLE
+        /**
 		* default look up table translating OID values into their common symbols following
 		* the convention in RFC 2253 with a few extras
 		*/
@@ -416,7 +416,7 @@
             }
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public X509Name(
             ArrayList ordering,
@@ -441,7 +441,7 @@
         {
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public X509Name(
             ArrayList				ordering,
@@ -452,7 +452,7 @@
         }
 #endif
 
-		/**
+        /**
         * Constructor from a table of attributes with ordering.
         * <p>
         * it's is assumed the table contains OID/string pairs, and the contents
@@ -484,7 +484,7 @@
 			}
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public X509Name(
             ArrayList oids,
@@ -494,7 +494,7 @@
         }
 #endif
 
-		/**
+        /**
         * Takes two vectors one of the oids and the other of the values.
         */
         public X509Name(
@@ -504,7 +504,7 @@
         {
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public X509Name(
             ArrayList				oids,
@@ -515,7 +515,7 @@
         }
 #endif
 
-		/**
+        /**
         * Takes two vectors one of the oids and the other of the values.
         * <p>
         * The passed in converter will be used to convert the strings into their
@@ -598,7 +598,7 @@
         {
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public X509Name(
             bool reverse,
@@ -609,7 +609,7 @@
         }
 #endif
 
-		/**
+        /**
         * Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or
         * some such, converting it into an ordered set of name attributes. lookUp
         * should provide a table of lookups, indexed by lowercase only strings and
@@ -747,7 +747,7 @@
 			}
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
 		/**
 		* return an ArrayList of the oids in the name, in the order they were found.
 		*/
@@ -766,7 +766,7 @@
             return Platform.CreateArrayList(ordering);
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
 		/**
 		* return an ArrayList of the values found in the name, in the order they
 		* were found.
@@ -787,7 +787,7 @@
             return Platform.CreateArrayList(values);
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
 		/**
 		 * return an ArrayList of the values found in the name, in the order they
 		 * were found, with the DN label corresponding to passed in oid.
@@ -801,7 +801,7 @@
 		}
 #endif
 
-		/**
+        /**
 		 * return an IList of the values found in the name, in the order they
 		 * were found, with the DN label corresponding to passed in oid.
 		 */
@@ -1106,7 +1106,7 @@
             }
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public string ToString(
             bool        reverse,
@@ -1132,7 +1132,7 @@
             bool		reverse,
             IDictionary oidSymbols)
         {
-#if SILVERLIGHT
+#if SILVERLIGHT || PORTABLE
             List<object> components = new List<object>();
 #else
 			ArrayList components = new ArrayList();
Index: src/bcpg/ArmoredInputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/bcpg/ArmoredInputStream.cs,v
retrieving revision 1.30
diff -u -r1.30 ArmoredInputStream.cs
--- src/bcpg/ArmoredInputStream.cs	19 Sep 2010 07:34:49 -0000	1.30
+++ src/bcpg/ArmoredInputStream.cs	12 Feb 2013 05:55:22 -0000
@@ -506,8 +506,12 @@
 
 		public override void Close()
 		{
+#if PORTABLE
+            input.Dispose();
+#else
 			input.Close();
-			base.Close();
+#endif
+            base.Close();
 		}
     }
 }
Index: src/bcpg/ArmoredOutputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/bcpg/ArmoredOutputStream.cs,v
retrieving revision 1.35
diff -u -r1.35 ArmoredOutputStream.cs
--- src/bcpg/ArmoredOutputStream.cs	2 Feb 2011 04:14:58 -0000	1.35
+++ src/bcpg/ArmoredOutputStream.cs	12 Feb 2013 05:55:22 -0000
@@ -5,6 +5,10 @@
 using System.Reflection;
 using System.Text;
 
+#if PORTABLE
+using System.Linq;
+#endif
+
 using Org.BouncyCastle.Utilities;
 using Org.BouncyCastle.Utilities.IO;
 
@@ -98,7 +102,16 @@
         private static readonly string	footerTail = "-----";
 
         private static readonly string version = "BCPG C# v"
+#if PORTABLE
+            +
+            Assembly.GetExecutingAssembly()
+                    .GetCustomAttributes(typeof (AssemblyVersionAttribute), true)
+                    .Cast<AssemblyVersionAttribute>()
+                    .First()
+                    .Version;
+#else
 			+ Assembly.GetExecutingAssembly().GetName().Version;
+#endif
 
 		private readonly IDictionary headers;
 
Index: src/bcpg/BcpgInputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/bcpg/BcpgInputStream.cs,v
retrieving revision 1.11
diff -u -r1.11 BcpgInputStream.cs
--- src/bcpg/BcpgInputStream.cs	19 Feb 2008 11:32:01 -0000	1.11
+++ src/bcpg/BcpgInputStream.cs	12 Feb 2013 05:55:22 -0000
@@ -252,8 +252,12 @@
 
 		public override void Close()
 		{
+#if PORTABLE
+            m_in.Dispose();
+#else
 			m_in.Close();
-			base.Close();
+#endif
+            base.Close();
 		}
 
 		/// <summary>
Index: src/bcpg/BcpgOutputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/bcpg/BcpgOutputStream.cs,v
retrieving revision 1.11
diff -u -r1.11 BcpgOutputStream.cs
--- src/bcpg/BcpgOutputStream.cs	9 May 2008 14:41:00 -0000	1.11
+++ src/bcpg/BcpgOutputStream.cs	12 Feb 2013 05:55:22 -0000
@@ -383,8 +383,12 @@
         {
 			this.Finish();
 			outStr.Flush();
+#if PORTABLE
+            outStr.Dispose();
+#else
 			outStr.Close();
-			base.Close();
+#endif
+            base.Close();
         }
     }
 }
Index: src/cms/CMSAttributeTableGenerationException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSAttributeTableGenerationException.cs,v
retrieving revision 1.2
diff -u -r1.2 CMSAttributeTableGenerationException.cs
--- src/cms/CMSAttributeTableGenerationException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/cms/CMSAttributeTableGenerationException.cs	12 Feb 2013 07:35:21 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Cms
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CmsAttributeTableGenerationException
Index: src/cms/CMSAuthenticatedDataGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSAuthenticatedDataGenerator.cs,v
retrieving revision 1.6
diff -u -r1.6 CMSAuthenticatedDataGenerator.cs
--- src/cms/CMSAuthenticatedDataGenerator.cs	18 Feb 2011 06:04:32 -0000	1.6
+++ src/cms/CMSAuthenticatedDataGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -83,10 +83,15 @@
 
 				content.Write(mOut);
 
-				mOut.Close();
+#if PORTABLE
+                mOut.Dispose();
+                bOut.Dispose();
+#else
+                mOut.Close();
 				bOut.Close();
+#endif
 
-				encContent = new BerOctetString(bOut.ToArray());
+                encContent = new BerOctetString(bOut.ToArray());
 
 				byte[] macOctets = MacUtilities.DoFinal(mac);
 				macResult = new DerOctetString(macOctets);
Index: src/cms/CMSAuthenticatedDataStreamGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSAuthenticatedDataStreamGenerator.cs,v
retrieving revision 1.9
diff -u -r1.9 CMSAuthenticatedDataStreamGenerator.cs
--- src/cms/CMSAuthenticatedDataStreamGenerator.cs	18 Feb 2011 06:04:32 -0000	1.9
+++ src/cms/CMSAuthenticatedDataStreamGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -166,7 +166,7 @@
 
 				IMac mac = MacUtilities.GetMac(macAlgId.ObjectID);
 				// TODO Confirm no ParametersWithRandom needed
-	            mac.Init(cipherParameters);
+				mac.Init(cipherParameters);
 				Stream mOut = new TeeOutputStream(octetOutputStream, new MacOutputStream(mac));
 
 				return new CmsAuthenticatedDataOutputStream(mOut, mac, cGen, authGen, eiGen);
@@ -253,7 +253,11 @@
 
 			public override void Close()
 			{
+#if PORTABLE
+				macStream.Dispose();
+#else
 				macStream.Close();
+#endif
 
 				// TODO Parent context(s) should really be be closed explicitly
 
Index: src/cms/CMSContentInfoParser.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSContentInfoParser.cs,v
retrieving revision 1.11
diff -u -r1.11 CMSContentInfoParser.cs
--- src/cms/CMSContentInfoParser.cs	22 Feb 2011 03:41:15 -0000	1.11
+++ src/cms/CMSContentInfoParser.cs	12 Feb 2013 05:55:22 -0000
@@ -41,7 +41,11 @@
 		*/
 		public void Close()
 		{
+#if PORTABLE
+			this.data.Dispose();
+#else
 			this.data.Close();
+#endif
 		}
 	}
 }
Index: src/cms/CMSException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSException.cs,v
retrieving revision 1.7
diff -u -r1.7 CMSException.cs
--- src/cms/CMSException.cs	24 Jan 2013 06:53:43 -0000	1.7
+++ src/cms/CMSException.cs	12 Feb 2013 07:35:21 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Cms
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CmsException
Index: src/cms/CMSProcessableFile.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSProcessableFile.cs,v
retrieving revision 1.9
diff -u -r1.9 CMSProcessableFile.cs
--- src/cms/CMSProcessableFile.cs	2 Sep 2011 05:07:48 -0000	1.9
+++ src/cms/CMSProcessableFile.cs	12 Feb 2013 05:55:22 -0000
@@ -1,3 +1,4 @@
+#if !PORTABLE
 using System;
 using System.IO;
 
@@ -52,3 +53,4 @@
 		}
 	}
 }
+#endif
\ No newline at end of file
Index: src/cms/CMSProcessableInputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSProcessableInputStream.cs,v
retrieving revision 1.3
diff -u -r1.3 CMSProcessableInputStream.cs
--- src/cms/CMSProcessableInputStream.cs	2 Sep 2011 05:07:48 -0000	1.3
+++ src/cms/CMSProcessableInputStream.cs	12 Feb 2013 05:55:22 -0000
@@ -29,7 +29,11 @@
 			CheckSingleUsage();
 
 			Streams.PipeAll(input, output);
+#if PORTABLE
+			input.Dispose();
+#else
 			input.Close();
+#endif
 		}
 
 		[Obsolete]
Index: src/cms/CMSSignedDataGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSSignedDataGenerator.cs,v
retrieving revision 1.40
diff -u -r1.40 CMSSignedDataGenerator.cs
--- src/cms/CMSSignedDataGenerator.cs	21 Feb 2011 07:36:51 -0000	1.40
+++ src/cms/CMSSignedDataGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -108,8 +108,8 @@
 				outer._digests.Add(digestOID, hash.Clone());
 
 				sig.Init(true, new ParametersWithRandom(key, random));
-#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT
-				Stream sigStr = new SigOutputStream(sig);
+#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE
+                Stream sigStr = new SigOutputStream(sig);
 #else
 				Stream sigStr = new BufferedStream(new SigOutputStream(sig));
 #endif
@@ -145,8 +145,12 @@
 					content.Write(sigStr);
                 }
 
+#if PORTABLE
+                sigStr.Dispose();
+#else
 				sigStr.Close();
-				byte[] sigBytes = sig.GenerateSignature();
+#endif
+                byte[] sigBytes = sig.GenerateSignature();
 
 				Asn1Set unsignedAttr = null;
 				if (unsAttr != null)
Index: src/cms/CMSSignedDataParser.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSSignedDataParser.cs,v
retrieving revision 1.28
diff -u -r1.28 CMSSignedDataParser.cs
--- src/cms/CMSSignedDataParser.cs	19 Sep 2010 07:34:50 -0000	1.28
+++ src/cms/CMSSignedDataParser.cs	12 Feb 2013 05:55:22 -0000
@@ -203,8 +203,8 @@
 			{
 				PopulateCertCrlSets();
 
-                IList signerInfos = Platform.CreateArrayList();
-                IDictionary hashes = Platform.CreateHashtable();
+				IList signerInfos = Platform.CreateArrayList();
+				IDictionary hashes = Platform.CreateHashtable();
 
 				foreach (object digestKey in _digests.Keys)
 				{
@@ -389,7 +389,11 @@
 
 //			gen.AddSigners(parser.GetSignerInfos());
 
+#if PORTABLE
+			contentOut.Dispose();
+#else
 			contentOut.Close();
+#endif
 
 			return outStr;
 		}
@@ -439,7 +443,11 @@
 
 			gen.AddSigners(parser.GetSignerInfos());
 
+#if PORTABLE
+			contentOut.Dispose();
+#else
 			contentOut.Close();
+#endif
 
 			return outStr;
 		}
Index: src/cms/CMSSignedDataStreamGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSSignedDataStreamGenerator.cs,v
retrieving revision 1.42
diff -u -r1.42 CMSSignedDataStreamGenerator.cs
--- src/cms/CMSSignedDataStreamGenerator.cs	21 Feb 2011 07:36:51 -0000	1.42
+++ src/cms/CMSSignedDataStreamGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -18,37 +18,37 @@
 
 namespace Org.BouncyCastle.Cms
 {
-    /**
-    * General class for generating a pkcs7-signature message stream.
-    * <p>
-    * A simple example of usage.
-    * </p>
-    * <pre>
-    *      IX509Store                   certs...
-    *      CmsSignedDataStreamGenerator gen = new CmsSignedDataStreamGenerator();
-    *
-    *      gen.AddSigner(privateKey, cert, CmsSignedDataStreamGenerator.DIGEST_SHA1);
-    *
-    *      gen.AddCertificates(certs);
-    *
-    *      Stream sigOut = gen.Open(bOut);
-    *
-    *      sigOut.Write(Encoding.UTF8.GetBytes("Hello World!"));
-    *
-    *      sigOut.Close();
-    * </pre>
-    */
-    public class CmsSignedDataStreamGenerator
-        : CmsSignedGenerator
-    {
+	/**
+	* General class for generating a pkcs7-signature message stream.
+	* <p>
+	* A simple example of usage.
+	* </p>
+	* <pre>
+	*      IX509Store                   certs...
+	*      CmsSignedDataStreamGenerator gen = new CmsSignedDataStreamGenerator();
+	*
+	*      gen.AddSigner(privateKey, cert, CmsSignedDataStreamGenerator.DIGEST_SHA1);
+	*
+	*      gen.AddCertificates(certs);
+	*
+	*      Stream sigOut = gen.Open(bOut);
+	*
+	*      sigOut.Write(Encoding.UTF8.GetBytes("Hello World!"));
+	*
+	*      sigOut.Close();
+	* </pre>
+	*/
+	public class CmsSignedDataStreamGenerator
+		: CmsSignedGenerator
+	{
 		private static readonly CmsSignedHelper Helper = CmsSignedHelper.Instance;
 
 		private readonly IList      _signerInfs = Platform.CreateArrayList();
 		private readonly ISet		_messageDigestOids = new HashSet();
-        private readonly IDictionary _messageDigests = Platform.CreateHashtable();
-        private readonly IDictionary _messageHashes = Platform.CreateHashtable();
+		private readonly IDictionary _messageDigests = Platform.CreateHashtable();
+		private readonly IDictionary _messageHashes = Platform.CreateHashtable();
 		private bool				_messageDigestsLocked;
-        private int					_bufferSize;
+		private int					_bufferSize;
 
 		private class DigestAndSignerInfoGeneratorHolder
 		{
@@ -68,7 +68,7 @@
 		}
 
 		private class SignerInfoGeneratorImpl : SignerInfoGenerator
-        {
+		{
 			private readonly CmsSignedDataStreamGenerator outer;
 
 			private readonly SignerIdentifier			_signerIdentifier;
@@ -102,7 +102,7 @@
 
 				if (_sAttr != null)
 				{
-            		_sig = Helper.GetSignatureInstance(signatureName);
+					_sig = Helper.GetSignatureInstance(signatureName);
 				}
 				else
 				{
@@ -141,7 +141,7 @@
 			}
 
 			public SignerInfo Generate(DerObjectIdentifier contentType, AlgorithmIdentifier digestAlgorithm,
-        		byte[] calculatedDigest)
+				byte[] calculatedDigest)
 			{
 				try
 				{
@@ -172,19 +172,19 @@
 //						Asn1.Cms.AttributeTable signed = _sAttr.GetAttributes(Collections.unmodifiableMap(parameters));
 						Asn1.Cms.AttributeTable signed = _sAttr.GetAttributes(parameters);
 
-                        if (contentType == null) //counter signature
-                        {
-                            if (signed != null && signed[CmsAttributes.ContentType] != null)
-                            {
-                                IDictionary tmpSigned = signed.ToDictionary();
-                                tmpSigned.Remove(CmsAttributes.ContentType);
-                                signed = new Asn1.Cms.AttributeTable(tmpSigned);
-                            }
-                        }
+						if (contentType == null) //counter signature
+						{
+							if (signed != null && signed[CmsAttributes.ContentType] != null)
+							{
+								IDictionary tmpSigned = signed.ToDictionary();
+								tmpSigned.Remove(CmsAttributes.ContentType);
+								signed = new Asn1.Cms.AttributeTable(tmpSigned);
+							}
+						}
 
-                        signedAttr = outer.GetAttributeSet(signed);
+						signedAttr = outer.GetAttributeSet(signed);
 
-                		// sig must be composed from the DER encoding.
+						// sig must be composed from the DER encoding.
 						bytesToSign = signedAttr.GetEncoded(Asn1Encodable.Der);
 					}
 					else
@@ -221,20 +221,20 @@
 					return new SignerInfo(_signerIdentifier, digestAlgorithm,
 						signedAttr, digestEncryptionAlgorithm, new DerOctetString(sigBytes), unsignedAttr);
 				}
-	            catch (IOException e)
-	            {
-	                throw new CmsStreamException("encoding error.", e);
-	            }
-	            catch (SignatureException e)
-	            {
-	                throw new CmsStreamException("error creating signature.", e);
-	            }
-            }
-        }
+				catch (IOException e)
+				{
+					throw new CmsStreamException("encoding error.", e);
+				}
+				catch (SignatureException e)
+				{
+					throw new CmsStreamException("error creating signature.", e);
+				}
+			}
+		}
 
 		public CmsSignedDataStreamGenerator()
-        {
-        }
+		{
+		}
 
 		/// <summary>Constructor allowing specific source of randomness</summary>
 		/// <param name="rand">Instance of <c>SecureRandom</c> to use.</param>
@@ -245,20 +245,20 @@
 		}
 
 		/**
-        * Set the underlying string size for encapsulated data
-        *
-        * @param bufferSize length of octet strings to buffer the data.
-        */
-        public void SetBufferSize(
-            int bufferSize)
-        {
-            _bufferSize = bufferSize;
-        }
+		* Set the underlying string size for encapsulated data
+		*
+		* @param bufferSize length of octet strings to buffer the data.
+		*/
+		public void SetBufferSize(
+			int bufferSize)
+		{
+			_bufferSize = bufferSize;
+		}
 
 		public void AddDigests(
-       		params string[] digestOids)
+			params string[] digestOids)
 		{
-       		AddDigests((IEnumerable) digestOids);
+			AddDigests((IEnumerable) digestOids);
 		}
 
 		public void AddDigests(
@@ -271,16 +271,16 @@
 		}
 
 		/**
-        * add a signer - no attributes other than the default ones will be
-        * provided here.
-        * @throws NoSuchAlgorithmException
-        * @throws InvalidKeyException
-        */
-        public void AddSigner(
-            AsymmetricKeyParameter	privateKey,
-            X509Certificate			cert,
-            string					digestOid)
-        {
+		* add a signer - no attributes other than the default ones will be
+		* provided here.
+		* @throws NoSuchAlgorithmException
+		* @throws InvalidKeyException
+		*/
+		public void AddSigner(
+			AsymmetricKeyParameter	privateKey,
+			X509Certificate			cert,
+			string					digestOid)
+		{
 			AddSigner(privateKey, cert, digestOid,
 				new DefaultSignedAttributeTableGenerator(), null);
 		}
@@ -303,18 +303,18 @@
 				(CmsAttributeTableGenerator)null);
 		}
 
-        /**
-        * add a signer with extra signed/unsigned attributes.
-        * @throws NoSuchAlgorithmException
-        * @throws InvalidKeyException
-        */
-        public void AddSigner(
-            AsymmetricKeyParameter	privateKey,
-            X509Certificate			cert,
-            string					digestOid,
-            Asn1.Cms.AttributeTable	signedAttr,
-            Asn1.Cms.AttributeTable	unsignedAttr)
-        {
+		/**
+		* add a signer with extra signed/unsigned attributes.
+		* @throws NoSuchAlgorithmException
+		* @throws InvalidKeyException
+		*/
+		public void AddSigner(
+			AsymmetricKeyParameter	privateKey,
+			X509Certificate			cert,
+			string					digestOid,
+			Asn1.Cms.AttributeTable	signedAttr,
+			Asn1.Cms.AttributeTable	unsignedAttr)
+		{
 			AddSigner(privateKey, cert, digestOid,
 				new DefaultSignedAttributeTableGenerator(signedAttr),
 				new SimpleAttributeTableGenerator(unsignedAttr));
@@ -349,7 +349,7 @@
 		{
 			AddSigner(privateKey, cert, GetEncOid(privateKey, digestOid), digestOid,
 				signedAttrGenerator, unsignedAttrGenerator);
-        }
+		}
 
 		public void AddSigner(
 			AsymmetricKeyParameter		privateKey,
@@ -407,8 +407,8 @@
 			string					digestOid,
 			Asn1.Cms.AttributeTable	signedAttr,
 			Asn1.Cms.AttributeTable	unsignedAttr)
-	    {
-	        AddSigner(privateKey, subjectKeyID, digestOid,
+		{
+			AddSigner(privateKey, subjectKeyID, digestOid,
 				new DefaultSignedAttributeTableGenerator(signedAttr),
 				new SimpleAttributeTableGenerator(unsignedAttr));
 		}
@@ -463,26 +463,26 @@
 		}
 
 		/**
-        * generate a signed object that for a CMS Signed Data object
-        */
-        public Stream Open(
-            Stream outStream)
-        {
-            return Open(outStream, false);
-        }
-
-        /**
-        * generate a signed object that for a CMS Signed Data
-        * object - if encapsulate is true a copy
-        * of the message will be included in the signature with the
-        * default content type "data".
-        */
-        public Stream Open(
-            Stream	outStream,
-            bool	encapsulate)
-        {
-            return Open(outStream, Data, encapsulate);
-        }
+		* generate a signed object that for a CMS Signed Data object
+		*/
+		public Stream Open(
+			Stream outStream)
+		{
+			return Open(outStream, false);
+		}
+
+		/**
+		* generate a signed object that for a CMS Signed Data
+		* object - if encapsulate is true a copy
+		* of the message will be included in the signature with the
+		* default content type "data".
+		*/
+		public Stream Open(
+			Stream	outStream,
+			bool	encapsulate)
+		{
+			return Open(outStream, Data, encapsulate);
+		}
 
 		/**
 		 * generate a signed object that for a CMS Signed Data
@@ -503,16 +503,16 @@
 		}
 
 		/**
-        * generate a signed object that for a CMS Signed Data
-        * object - if encapsulate is true a copy
-        * of the message will be included in the signature. The content type
-        * is set according to the OID represented by the string signedContentType.
-        */
-        public Stream Open(
-            Stream	outStream,
-            string	signedContentType,
-            bool	encapsulate)
-        {
+		* generate a signed object that for a CMS Signed Data
+		* object - if encapsulate is true a copy
+		* of the message will be included in the signature. The content type
+		* is set according to the OID represented by the string signedContentType.
+		*/
+		public Stream Open(
+			Stream	outStream,
+			string	signedContentType,
+			bool	encapsulate)
+		{
 			return Open(outStream, signedContentType, encapsulate, null);
 		}
 
@@ -542,85 +542,85 @@
 			_messageDigestsLocked = true;
 
 			//
-            // ContentInfo
-            //
-            BerSequenceGenerator sGen = new BerSequenceGenerator(outStream);
+			// ContentInfo
+			//
+			BerSequenceGenerator sGen = new BerSequenceGenerator(outStream);
 
 			sGen.AddObject(CmsObjectIdentifiers.SignedData);
 
 			//
-            // Signed Data
-            //
-            BerSequenceGenerator sigGen = new BerSequenceGenerator(
+			// Signed Data
+			//
+			BerSequenceGenerator sigGen = new BerSequenceGenerator(
 				sGen.GetRawOutputStream(), 0, true);
 
-            bool isCounterSignature = (signedContentType == null);
+			bool isCounterSignature = (signedContentType == null);
 
-            DerObjectIdentifier contentTypeOid = isCounterSignature
-                ? null
-                : new DerObjectIdentifier(signedContentType);
+			DerObjectIdentifier contentTypeOid = isCounterSignature
+				? null
+				: new DerObjectIdentifier(signedContentType);
 
-            sigGen.AddObject(CalculateVersion(contentTypeOid));
+			sigGen.AddObject(CalculateVersion(contentTypeOid));
 
 			Asn1EncodableVector digestAlgs = new Asn1EncodableVector();
 
 			foreach (string digestOid in _messageDigestOids)
-            {
+			{
 				digestAlgs.Add(
-            		new AlgorithmIdentifier(new DerObjectIdentifier(digestOid), DerNull.Instance));
-            }
+					new AlgorithmIdentifier(new DerObjectIdentifier(digestOid), DerNull.Instance));
+			}
 
-            {
+			{
 				byte[] tmp = new DerSet(digestAlgs).GetEncoded();
 				sigGen.GetRawOutputStream().Write(tmp, 0, tmp.Length);
 			}
 
 			BerSequenceGenerator eiGen = new BerSequenceGenerator(sigGen.GetRawOutputStream());
-            eiGen.AddObject(contentTypeOid);
+			eiGen.AddObject(contentTypeOid);
 
-        	// If encapsulating, add the data as an octet string in the sequence
+			// If encapsulating, add the data as an octet string in the sequence
 			Stream encapStream = encapsulate
 				?	CmsUtilities.CreateBerOctetOutputStream(eiGen.GetRawOutputStream(), 0, true, _bufferSize)
 				:	null;
 
-        	// Also send the data to 'dataOutputStream' if necessary
+			// Also send the data to 'dataOutputStream' if necessary
 			Stream teeStream = GetSafeTeeOutputStream(dataOutputStream, encapStream);
 
-        	// Let all the digests see the data as it is written
+			// Let all the digests see the data as it is written
 			Stream digStream = AttachDigestsToOutputStream(_messageDigests.Values, teeStream);
 
 			return new CmsSignedDataOutputStream(this, digStream, signedContentType, sGen, sigGen, eiGen);
-        }
+		}
 
 		private void RegisterDigestOid(
 			string digestOid)
 		{
-       		if (_messageDigestsLocked)
-       		{
-       			if (!_messageDigestOids.Contains(digestOid))
+			if (_messageDigestsLocked)
+			{
+				if (!_messageDigestOids.Contains(digestOid))
 					throw new InvalidOperationException("Cannot register new digest OIDs after the data stream is opened");
-       		}
-       		else
-       		{
+			}
+			else
+			{
 				_messageDigestOids.Add(digestOid);
-       		}
+			}
 		}
 
 		private void ConfigureDigest(
 			string digestOid)
 		{
-       		RegisterDigestOid(digestOid);
+			RegisterDigestOid(digestOid);
 
-       		string digestName = Helper.GetDigestAlgName(digestOid);
+			string digestName = Helper.GetDigestAlgName(digestOid);
 			IDigest dig = (IDigest)_messageDigests[digestName];
 			if (dig == null)
 			{
 				if (_messageDigestsLocked)
 					throw new InvalidOperationException("Cannot configure new digests after the data stream is opened");
 
-            	dig = Helper.GetDigestInstance(digestName);
-            	_messageDigests[digestName] = dig;
-            }
+				dig = Helper.GetDigestInstance(digestName);
+				_messageDigests[digestName] = dig;
+			}
 		}
 
 		// TODO Make public?
@@ -636,7 +636,11 @@
 			{
 				content.Write(signedOut);
 			}
+#if PORTABLE
+			signedOut.Dispose();
+#else
 			signedOut.Close();
+#endif
 		}
 
 		// RFC3852, section 5.1:
@@ -717,13 +721,13 @@
 				return new DerInteger(4);
 			}
 
-            if (attrCertV1Found || !CmsObjectIdentifiers.Data.Equals(contentOid) || CheckForVersion3(_signers))
-            {
-                return new DerInteger(3);
-            }
+			if (attrCertV1Found || !CmsObjectIdentifiers.Data.Equals(contentOid) || CheckForVersion3(_signers))
+			{
+				return new DerInteger(3);
+			}
 
-            return new DerInteger(1);
-        }
+			return new DerInteger(1);
+		}
 
 		private bool CheckForVersion3(
 			IList signerInfos)
@@ -768,54 +772,58 @@
 		}
 
 		private class CmsSignedDataOutputStream
-            : BaseOutputStream
-        {
+			: BaseOutputStream
+		{
 			private readonly CmsSignedDataStreamGenerator outer;
 
 			private Stream					_out;
-            private DerObjectIdentifier		_contentOID;
-            private BerSequenceGenerator	_sGen;
-            private BerSequenceGenerator	_sigGen;
-            private BerSequenceGenerator	_eiGen;
+			private DerObjectIdentifier		_contentOID;
+			private BerSequenceGenerator	_sGen;
+			private BerSequenceGenerator	_sigGen;
+			private BerSequenceGenerator	_eiGen;
 
 			public CmsSignedDataOutputStream(
 				CmsSignedDataStreamGenerator	outer,
 				Stream							outStream,
-                string							contentOID,
-                BerSequenceGenerator			sGen,
-                BerSequenceGenerator			sigGen,
-                BerSequenceGenerator			eiGen)
-            {
+				string							contentOID,
+				BerSequenceGenerator			sGen,
+				BerSequenceGenerator			sigGen,
+				BerSequenceGenerator			eiGen)
+			{
 				this.outer = outer;
 
 				_out = outStream;
-                _contentOID = new DerObjectIdentifier(contentOID);
-                _sGen = sGen;
-                _sigGen = sigGen;
-                _eiGen = eiGen;
-            }
+				_contentOID = new DerObjectIdentifier(contentOID);
+				_sGen = sGen;
+				_sigGen = sigGen;
+				_eiGen = eiGen;
+			}
 
 			public override void WriteByte(
-                byte b)
-            {
-                _out.WriteByte(b);
-            }
+				byte b)
+			{
+				_out.WriteByte(b);
+			}
 
 			public override void Write(
-                byte[]	bytes,
-                int		off,
-                int		len)
-            {
-                _out.Write(bytes, off, len);
-            }
+				byte[]	bytes,
+				int		off,
+				int		len)
+			{
+				_out.Write(bytes, off, len);
+			}
 
 			public override void Close()
-            {
-                _out.Close();
+			{
+#if PORTABLE
+				_out.Dispose();
+#else
+				_out.Close();
+#endif
 
 				// TODO Parent context(s) should really be be closed explicitly
 
-                _eiGen.Close();
+				_eiGen.Close();
 
 				outer._digests.Clear();    // clear the current preserved digest state
 
@@ -847,11 +855,11 @@
 				//
 				// collect all the SignerInfo objects
 				//
-                Asn1EncodableVector signerInfos = new Asn1EncodableVector();
+				Asn1EncodableVector signerInfos = new Asn1EncodableVector();
 
 				//
-                // add the generated SignerInfo objects
-                //
+				// add the generated SignerInfo objects
+				//
 				{
 					foreach (DigestAndSignerInfoGeneratorHolder holder in outer._signerInfs)
 					{
@@ -862,12 +870,12 @@
 						outer._digests[holder.digestOID] = calculatedDigest.Clone();
 
 						signerInfos.Add(holder.signerInf.Generate(_contentOID, digestAlgorithm, calculatedDigest));
-	                }
+					}
 				}
 
 				//
-                // add the precalculated SignerInfo objects.
-                //
+				// add the precalculated SignerInfo objects.
+				//
 				{
 					foreach (SignerInformation signer in outer._signers)
 					{
@@ -891,13 +899,13 @@
 //						}
 
 						signerInfos.Add(signer.ToSignerInfo());
-	                }
+					}
 				}
 
 				WriteToGenerator(_sigGen, new DerSet(signerInfos));
 
 				_sigGen.Close();
-                _sGen.Close();
+				_sGen.Close();
 				base.Close();
 			}
 
@@ -909,5 +917,5 @@
 				ag.GetRawOutputStream().Write(encoded, 0, encoded.Length);
 			}
 		}
-    }
+	}
 }
Index: src/cms/CMSStreamException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSStreamException.cs,v
retrieving revision 1.2
diff -u -r1.2 CMSStreamException.cs
--- src/cms/CMSStreamException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/cms/CMSStreamException.cs	12 Feb 2013 07:36:38 -0000
@@ -3,7 +3,7 @@
 
 namespace Org.BouncyCastle.Cms
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CmsStreamException
Index: src/cms/CMSTypedStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/CMSTypedStream.cs,v
retrieving revision 1.17
diff -u -r1.17 CMSTypedStream.cs
--- src/cms/CMSTypedStream.cs	1 Sep 2011 09:48:40 -0000	1.17
+++ src/cms/CMSTypedStream.cs	12 Feb 2013 05:55:22 -0000
@@ -33,7 +33,7 @@
 			int		bufSize)
 		{
 			_oid = oid;
-#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT
+#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE
 			_in = new FullReaderStream(inStream);
 #else
 			_in = new FullReaderStream(new BufferedStream(inStream, bufSize));
@@ -53,7 +53,11 @@
 		public void Drain()
 		{
 			Streams.Drain(_in);
+#if PORTABLE
+			_in.Dispose();
+#else
 			_in.Close();
+#endif
 		}
 
 		private class FullReaderStream : FilterStream
Index: src/cms/DefaultSignedAttributeTableGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/DefaultSignedAttributeTableGenerator.cs,v
retrieving revision 1.6
diff -u -r1.6 DefaultSignedAttributeTableGenerator.cs
--- src/cms/DefaultSignedAttributeTableGenerator.cs	19 Feb 2011 06:11:26 -0000	1.6
+++ src/cms/DefaultSignedAttributeTableGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -41,7 +41,7 @@
 			}
 		}
 
-#if SILVERLIGHT
+#if SILVERLIGHT || PORTABLE
 		/**
 		 * Create a standard attribute table from the passed in parameters - this will
 		 * normally include contentType, signingTime, and messageDigest. If the constructor
Index: src/cms/OriginatorInfoGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/cms/OriginatorInfoGenerator.cs,v
retrieving revision 1.2
diff -u -r1.2 OriginatorInfoGenerator.cs
--- src/cms/OriginatorInfoGenerator.cs	21 Jan 2013 12:34:30 -0000	1.2
+++ src/cms/OriginatorInfoGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -1,6 +1,9 @@
 ﻿using System;
 using System.Collections;
-
+#if PORTABLE
+using System.Collections.Generic;
+using Org.BouncyCastle.Asn1.X509;
+#endif
 using Org.BouncyCastle.Asn1;
 using Org.BouncyCastle.Asn1.Cms;
 using Org.BouncyCastle.Utilities;
Index: src/crypto/CryptoException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/CryptoException.cs,v
retrieving revision 1.14
diff -u -r1.14 CryptoException.cs
--- src/crypto/CryptoException.cs	24 Jan 2013 06:53:43 -0000	1.14
+++ src/crypto/CryptoException.cs	12 Feb 2013 07:35:21 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Crypto
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CryptoException
Index: src/crypto/DataLengthException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/DataLengthException.cs,v
retrieving revision 1.14
diff -u -r1.14 DataLengthException.cs
--- src/crypto/DataLengthException.cs	24 Jan 2013 06:53:43 -0000	1.14
+++ src/crypto/DataLengthException.cs	12 Feb 2013 07:36:38 -0000
@@ -8,7 +8,7 @@
      * insufficient input. In general this exception will Get thrown rather
      * than an ArrayOutOfBounds exception.
      */
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class DataLengthException
Index: src/crypto/InvalidCipherTextException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/InvalidCipherTextException.cs,v
retrieving revision 1.12
diff -u -r1.12 InvalidCipherTextException.cs
--- src/crypto/InvalidCipherTextException.cs	24 Jan 2013 06:53:43 -0000	1.12
+++ src/crypto/InvalidCipherTextException.cs	12 Feb 2013 07:36:38 -0000
@@ -6,7 +6,7 @@
      * this exception is thrown whenever we find something we don't expect in a
      * message.
      */
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class InvalidCipherTextException
Index: src/crypto/MaxBytesExceededException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/MaxBytesExceededException.cs,v
retrieving revision 1.2
diff -u -r1.2 MaxBytesExceededException.cs
--- src/crypto/MaxBytesExceededException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/crypto/MaxBytesExceededException.cs	12 Feb 2013 07:36:38 -0000
@@ -5,8 +5,8 @@
 	/// <summary>
 	/// This exception is thrown whenever a cipher requires a change of key, iv
 	/// or similar after x amount of bytes enciphered
-	/// </summary>
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+    /// </summary>
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class MaxBytesExceededException
Index: src/crypto/engines/NaccacheSternEngine.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/engines/NaccacheSternEngine.cs,v
retrieving revision 1.15
diff -u -r1.15 NaccacheSternEngine.cs
--- src/crypto/engines/NaccacheSternEngine.cs	19 Sep 2010 07:34:50 -0000	1.15
+++ src/crypto/engines/NaccacheSternEngine.cs	12 Feb 2013 05:55:22 -0000
@@ -49,10 +49,12 @@
 			// construct lookup table for faster decryption if necessary
 			if (!this.forEncryption)
 			{
+#if !PORTABLE
 				if (debug)
 				{
 					Console.WriteLine("Constructing lookup Array");
 				}
+#endif
 				NaccacheSternPrivateKeyParameters priv = (NaccacheSternPrivateKeyParameters)key;
 				IList primes = priv.SmallPrimesList;
 				lookup = new IList[primes.Count];
@@ -64,10 +66,12 @@
 					lookup[i] = Platform.CreateArrayList(actualPrimeValue);
 					lookup[i].Add(BigInteger.One);
 
+#if !PORTABLE
 					if (debug)
 					{
 						Console.WriteLine("Constructing lookup ArrayList for " + actualPrimeValue);
 					}
+#endif
 
 					BigInteger accJ = BigInteger.Zero;
 
@@ -156,10 +160,12 @@
 			// transform input into BigInteger
 			BigInteger input = new BigInteger(1, inBytes, inOff, length);
 
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine("input as BigInteger: " + input);
 			}
+#endif
 
 			byte[] output;
 			if (forEncryption)
@@ -178,10 +184,12 @@
 					IList al = lookup[i];
 					if (lookup[i].Count != ((BigInteger)primes[i]).IntValue)
 					{
+#if !PORTABLE
 						if (debug)
 						{
 							Console.WriteLine("Prime is " + primes[i] + ", lookup table has size " + al.Count);
 						}
+#endif
 						throw new InvalidCipherTextException("Error in lookup Array for "
 										+ ((BigInteger)primes[i]).IntValue
 										+ ": Size mismatch. Expected ArrayList with length "
@@ -192,6 +200,7 @@
 
 					if (lookedup == -1)
 					{
+#if !PORTABLE
 						if (debug)
 						{
 							Console.WriteLine("Actual prime is " + primes[i]);
@@ -204,6 +213,7 @@
 								Console.WriteLine(lookup[i][j]);
 							}
 						}
+#endif
 						throw new InvalidCipherTextException("Lookup failed");
 					}
 					plain.Add(BigInteger.ValueOf(lookedup));
@@ -256,10 +266,12 @@
 
 			byte[] tmp = key.G.ModPow(plain, key.Modulus).ToByteArray();
 			Array.Copy(tmp, 0, output, output.Length - tmp.Length, tmp.Length);
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine("Encrypted value is:  " + new BigInteger(output));
 			}
+#endif
 			return output;
 		}
 
@@ -302,12 +314,14 @@
 			BigInteger m2Crypt = new BigInteger(1, block2);
 			BigInteger m1m2Crypt = m1Crypt.Multiply(m2Crypt);
 			m1m2Crypt = m1m2Crypt.Mod(key.Modulus);
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine("c(m1) as BigInteger:....... " + m1Crypt);
 				Console.WriteLine("c(m2) as BigInteger:....... " + m2Crypt);
 				Console.WriteLine("c(m1)*c(m2)%n = c(m1+m2)%n: " + m1m2Crypt);
 			}
+#endif
 
 			//byte[] output = key.Modulus.ToByteArray();
 			//Array.Clear(output, 0, output.Length);
@@ -332,20 +346,24 @@
 		public byte[] ProcessData(
 			byte[] data)
 		{
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine();
 			}
+#endif
 			if (data.Length > GetInputBlockSize())
 			{
 				int inBlocksize = GetInputBlockSize();
 				int outBlocksize = GetOutputBlockSize();
+#if !PORTABLE
 				if (debug)
 				{
 					Console.WriteLine("Input blocksize is:  " + inBlocksize + " bytes");
 					Console.WriteLine("Output blocksize is: " + outBlocksize + " bytes");
 					Console.WriteLine("Data has length:.... " + data.Length + " bytes");
 				}
+#endif
 				int datapos = 0;
 				int retpos = 0;
 				byte[] retval = new byte[(data.Length / inBlocksize + 1) * outBlocksize];
@@ -362,10 +380,12 @@
 						tmp = ProcessBlock(data, datapos, data.Length - datapos);
 						datapos += data.Length - datapos;
 					}
+#if !PORTABLE
 					if (debug)
 					{
 						Console.WriteLine("new datapos is " + datapos);
 					}
+#endif
 					if (tmp != null)
 					{
 						tmp.CopyTo(retval, retpos);
@@ -373,27 +393,33 @@
 					}
 					else
 					{
+#if !PORTABLE
 						if (debug)
 						{
 							Console.WriteLine("cipher returned null");
 						}
+#endif
 						throw new InvalidCipherTextException("cipher returned null");
 					}
 				}
 				byte[] ret = new byte[retpos];
 				Array.Copy(retval, 0, ret, 0, retpos);
+#if !PORTABLE
 				if (debug)
 				{
 					Console.WriteLine("returning " + ret.Length + " bytes");
 				}
+#endif
 				return ret;
 			}
 			else
 			{
+#if !PORTABLE
 				if (debug)
 				{
 					Console.WriteLine("data size is less then input block size, processing directly");
 				}
+#endif
 				return ProcessBlock(data, 0, data.Length);
 			}
 		}
Index: src/crypto/generators/ECKeyPairGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/generators/ECKeyPairGenerator.cs,v
retrieving revision 1.29
diff -u -r1.29 ECKeyPairGenerator.cs
--- src/crypto/generators/ECKeyPairGenerator.cs	21 Jan 2013 13:04:23 -0000	1.29
+++ src/crypto/generators/ECKeyPairGenerator.cs	12 Feb 2013 09:27:06 -0000
@@ -115,7 +115,7 @@
 		private string VerifyAlgorithmName(
 			string algorithm)
 		{
-			string upper = Platform.ToUpperInvariant(algorithm);
+		    string upper = Platform.ToUpperInvariant(algorithm);
 
             switch (upper)
 			{
Index: src/crypto/generators/NaccacheSternKeyPairGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/generators/NaccacheSternKeyPairGenerator.cs,v
retrieving revision 1.14
diff -u -r1.14 NaccacheSternKeyPairGenerator.cs
--- src/crypto/generators/NaccacheSternKeyPairGenerator.cs	21 Jan 2013 12:34:30 -0000	1.14
+++ src/crypto/generators/NaccacheSternKeyPairGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -53,12 +53,14 @@
 			int certainty = param.Certainty;
 			bool debug = param.IsDebug;
 
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine("Fetching first " + param.CountSmallPrimes + " primes.");
 			}
+#endif
 
-			IList smallPrimes = findFirstPrimes(param.CountSmallPrimes);
+            IList smallPrimes = findFirstPrimes(param.CountSmallPrimes);
 
 			smallPrimes = permuteList(smallPrimes, rand);
 
@@ -92,12 +94,14 @@
 			BigInteger q;
 
 			long tries = 0;
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine("generating p and q");
 			}
+#endif
 
-			BigInteger _2au = a.Multiply(u).ShiftLeft(1);
+            BigInteger _2au = a.Multiply(u).ShiftLeft(1);
 			BigInteger _2bv = b.Multiply(v).ShiftLeft(1);
 
 			for (;;)
@@ -126,36 +130,44 @@
 
 				if (!sigma.Gcd(_p.Multiply(_q)).Equals(BigInteger.One))
 				{
+#if !PORTABLE
 					Console.WriteLine("sigma.gcd(_p.mult(_q)) != 1!\n _p: " + _p +"\n _q: "+ _q );
-					continue;
+#endif
+                    continue;
 				}
 
 				if (p.Multiply(q).BitLength < strength)
 				{
+#if !PORTABLE
 					if (debug)
 					{
 						Console.WriteLine("key size too small. Should be " + strength + " but is actually "
 							+ p.Multiply(q).BitLength);
 					}
-					continue;
+#endif
+                    continue;
 				}
 				break;
 			}
 
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine("needed " + tries + " tries to generate p and q.");
 			}
+#endif
 
-			BigInteger n = p.Multiply(q);
+            BigInteger n = p.Multiply(q);
 			BigInteger phi_n = p.Subtract(BigInteger.One).Multiply(q.Subtract(BigInteger.One));
 			BigInteger g;
 			tries = 0;
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine("generating g");
 			}
-			for (;;)
+#endif
+            for (; ; )
 			{
 				// TODO After the first loop, just regenerate one randomly-selected gPart each time?
 				IList gParts = Platform.CreateArrayList();
@@ -191,11 +203,13 @@
 				{
 					if (g.ModPow(phi_n.Divide((BigInteger)smallPrimes[i]), n).Equals(BigInteger.One))
 					{
+#if !PORTABLE
 						if (debug)
 						{
 							Console.WriteLine("g has order phi(n)/" + smallPrimes[i] + "\n g: " + g);
 						}
-						divisible = true;
+#endif
+                        divisible = true;
 						break;
 					}
 				}
@@ -210,47 +224,58 @@
 				//if (g.ModPow(phi_n.Divide(BigInteger.ValueOf(4)), n).Equals(BigInteger.One))
 				if (g.ModPow(phi_n.ShiftRight(2), n).Equals(BigInteger.One))
 				{
+#if !PORTABLE
 					if (debug)
 					{
 						Console.WriteLine("g has order phi(n)/4\n g:" + g);
 					}
-					continue;
+#endif
+                    continue;
 				}
 
 				if (g.ModPow(phi_n.Divide(_p), n).Equals(BigInteger.One))
 				{
+#if !PORTABLE
 					if (debug)
 					{
 						Console.WriteLine("g has order phi(n)/p'\n g: " + g);
 					}
-					continue;
+#endif
+                    continue;
 				}
 				if (g.ModPow(phi_n.Divide(_q), n).Equals(BigInteger.One))
 				{
+#if !PORTABLE
 					if (debug)
 					{
 						Console.WriteLine("g has order phi(n)/q'\n g: " + g);
 					}
-					continue;
+#endif
+                    continue;
 				}
 				if (g.ModPow(phi_n.Divide(a), n).Equals(BigInteger.One))
 				{
+#if !PORTABLE
 					if (debug)
 					{
 						Console.WriteLine("g has order phi(n)/a\n g: " + g);
 					}
-					continue;
+#endif
+                    continue;
 				}
 				if (g.ModPow(phi_n.Divide(b), n).Equals(BigInteger.One))
 				{
+#if !PORTABLE
 					if (debug)
 					{
 						Console.WriteLine("g has order phi(n)/b\n g: " + g);
 					}
-					continue;
+#endif
+                    continue;
 				}
 				break;
 			}
+#if !PORTABLE
 			if (debug)
 			{
 				Console.WriteLine("needed " + tries + " tries to generate g");
@@ -269,8 +294,9 @@
 				Console.WriteLine("g:.......... " + g);
 				Console.WriteLine();
 			}
+#endif
 
-			return new AsymmetricCipherKeyPair(new NaccacheSternKeyParameters(false, g, n, sigma.BitLength),
+            return new AsymmetricCipherKeyPair(new NaccacheSternKeyParameters(false, g, n, sigma.BitLength),
 				new NaccacheSternPrivateKeyParameters(g, n, sigma.BitLength, smallPrimes, phi_n));
 		}
 
Index: src/crypto/io/CipherStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/io/CipherStream.cs,v
retrieving revision 1.31
diff -u -r1.31 CipherStream.cs
--- src/crypto/io/CipherStream.cs	1 Nov 2008 16:01:26 -0000	1.31
+++ src/crypto/io/CipherStream.cs	12 Feb 2013 05:55:22 -0000
@@ -201,7 +201,11 @@
             set { throw new NotSupportedException(); }
         }
 
+#if PORTABLE
+        public virtual void Close()
+#else
 		public override void Close()
+#endif
         {
 			if (outCipher != null)
 			{
@@ -209,7 +213,11 @@
 				stream.Write(data, 0, data.Length);
 				stream.Flush();
 			}
+#if PORTABLE
+            stream.Dispose();
+#else
 			stream.Close();
+#endif
         }
 
 		public override void Flush()
Index: src/crypto/io/DigestStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/io/DigestStream.cs,v
retrieving revision 1.14
diff -u -r1.14 DigestStream.cs
--- src/crypto/io/DigestStream.cs	16 Mar 2009 06:52:48 -0000	1.14
+++ src/crypto/io/DigestStream.cs	12 Feb 2013 05:55:22 -0000
@@ -110,12 +110,19 @@
 			set { stream.Position = value; }
 		}
 
+#if PORTABLE
+        public virtual void Close()
+        {
+            stream.Dispose();
+        }
+#else
 		public override void Close()
 		{
 			stream.Close();
 		}
+#endif
 
-		public override  void Flush()
+        public override  void Flush()
 		{
 			stream.Flush();
 		}
Index: src/crypto/io/MacStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/io/MacStream.cs,v
retrieving revision 1.13
diff -u -r1.13 MacStream.cs
--- src/crypto/io/MacStream.cs	9 Sep 2009 20:02:02 -0000	1.13
+++ src/crypto/io/MacStream.cs	12 Feb 2013 05:55:22 -0000
@@ -109,12 +109,19 @@
 			set { stream.Position = value; }
 		}
 
+#if PORTABLE
+        public virtual void Close()
+        {
+            stream.Dispose();
+        }
+#else
 		public override void Close()
 		{
 			stream.Close();
 		}
+#endif
 
-		public override void Flush()
+        public override void Flush()
 		{
 			stream.Flush();
 		}
Index: src/crypto/io/SignerStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/io/SignerStream.cs,v
retrieving revision 1.1
diff -u -r1.1 SignerStream.cs
--- src/crypto/io/SignerStream.cs	16 Mar 2009 06:53:50 -0000	1.1
+++ src/crypto/io/SignerStream.cs	12 Feb 2013 05:55:22 -0000
@@ -110,12 +110,19 @@
 			set { stream.Position = value; }
 		}
 
+#if PORTABLE
+        public virtual void Close()
+        {
+            stream.Dispose();
+        }
+#else
 		public override void Close()
 		{
 			stream.Close();
 		}
+#endif
 
-		public override  void Flush()
+        public override  void Flush()
 		{
 			stream.Flush();
 		}
Index: src/crypto/modes/gcm/Tables1kGcmExponentiator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/modes/gcm/Tables1kGcmExponentiator.cs,v
retrieving revision 1.4
diff -u -r1.4 Tables1kGcmExponentiator.cs
--- src/crypto/modes/gcm/Tables1kGcmExponentiator.cs	21 Jan 2013 12:34:30 -0000	1.4
+++ src/crypto/modes/gcm/Tables1kGcmExponentiator.cs	12 Feb 2013 05:55:22 -0000
@@ -1,6 +1,8 @@
 using System;
 using System.Collections;
-
+#if PORTABLE
+using System.Collections.Generic;
+#endif
 using Org.BouncyCastle.Utilities;
 
 namespace Org.BouncyCastle.Crypto.Modes.Gcm
Index: src/crypto/parameters/ECKeyParameters.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/parameters/ECKeyParameters.cs,v
retrieving revision 1.18
diff -u -r1.18 ECKeyParameters.cs
--- src/crypto/parameters/ECKeyParameters.cs	21 Jan 2013 13:04:23 -0000	1.18
+++ src/crypto/parameters/ECKeyParameters.cs	12 Feb 2013 09:26:56 -0000
@@ -101,7 +101,7 @@
 		private string VerifyAlgorithmName(
 			string algorithm)
 		{
-			string upper = Platform.ToUpperInvariant(algorithm);
+		    string upper = Platform.ToUpperInvariant(algorithm);
 
             switch (upper)
 			{
Index: src/crypto/parameters/NaccacheSternPrivateKeyParameters.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/parameters/NaccacheSternPrivateKeyParameters.cs,v
retrieving revision 1.5
diff -u -r1.5 NaccacheSternPrivateKeyParameters.cs
--- src/crypto/parameters/NaccacheSternPrivateKeyParameters.cs	19 Sep 2010 07:34:50 -0000	1.5
+++ src/crypto/parameters/NaccacheSternPrivateKeyParameters.cs	12 Feb 2013 05:55:22 -0000
@@ -16,7 +16,7 @@
 		private readonly BigInteger phiN;
 		private readonly IList smallPrimes;
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public NaccacheSternPrivateKeyParameters(
             BigInteger g,
@@ -63,7 +63,7 @@
 			get { return phiN; }
 		}
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete("Use 'SmallPrimesList' instead")]
         public ArrayList SmallPrimes
 		{
Index: src/crypto/prng/CryptoApiRandomGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/prng/CryptoApiRandomGenerator.cs,v
retrieving revision 1.4
diff -u -r1.4 CryptoApiRandomGenerator.cs
--- src/crypto/prng/CryptoApiRandomGenerator.cs	27 Apr 2011 04:54:26 -0000	1.4
+++ src/crypto/prng/CryptoApiRandomGenerator.cs	12 Feb 2013 08:54:28 -0000
@@ -1,4 +1,4 @@
-#if !NETCF_1_0
+#if !(NETCF_1_0 || PORTABLE)
 
 using System;
 using System.Security.Cryptography;
Index: src/crypto/prng/ThreadedSeedGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/prng/ThreadedSeedGenerator.cs,v
retrieving revision 1.8
diff -u -r1.8 ThreadedSeedGenerator.cs
--- src/crypto/prng/ThreadedSeedGenerator.cs	31 Jan 2013 07:10:22 -0000	1.8
+++ src/crypto/prng/ThreadedSeedGenerator.cs	12 Feb 2013 08:51:48 -0000
@@ -34,7 +34,7 @@
 				int		numBytes,
 				bool	fast)
 			{
-#if SILVERLIGHT
+#if (SILVERLIGHT || PORTABLE)
                 return DoGenerateSeed(numBytes, fast);
 #else
                 ThreadPriority originalPriority = Thread.CurrentThread.Priority;
@@ -69,7 +69,11 @@
 					{
 						try
 						{
+#if PORTABLE
+						    new AutoResetEvent(false).WaitOne(1);
+#else
 							Thread.Sleep(1);
+#endif
 						}
 						catch (Exception)
 						{
Index: src/crypto/tls/RecordStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/tls/RecordStream.cs,v
retrieving revision 1.13
diff -u -r1.13 RecordStream.cs
--- src/crypto/tls/RecordStream.cs	17 Jun 2011 04:01:16 -0000	1.13
+++ src/crypto/tls/RecordStream.cs	12 Feb 2013 05:55:22 -0000
@@ -97,8 +97,12 @@
 			{
 				cOut.Write(message, offset, len);
 				cOut.Flush();
+#if PORTABLE
+                ciphertext = writeCipher.EncodePlaintext(type, buffer.ToArray(), 0, (int)buffer.Position);
+#else
 				ciphertext = writeCipher.EncodePlaintext(type, buffer.GetBuffer(), 0, (int)buffer.Position);
-				buffer.SetLength(0);
+#endif
+                buffer.SetLength(0);
 			}
 
 			byte[] writeMessage = new byte[ciphertext.Length + 5];
@@ -128,8 +132,12 @@
 			IOException e = null;
 			try
 			{
+#if PORTABLE
+                inStr.Dispose();
+#else
 				inStr.Close();
-			}
+#endif
+            }
 			catch (IOException ex)
 			{
 				e = ex;
@@ -138,7 +146,11 @@
 			try
 			{
 				// NB: This is harmless if outStr == inStr
+#if PORTABLE
+                outStr.Dispose();
+#else
 				outStr.Close();
+#endif
 			}
 			catch (IOException ex)
 			{
Index: src/crypto/tls/TlsException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/tls/TlsException.cs,v
retrieving revision 1.2
diff -u -r1.2 TlsException.cs
--- src/crypto/tls/TlsException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/crypto/tls/TlsException.cs	12 Feb 2013 07:35:21 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Crypto.Tls
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class TlsException : Exception
Index: src/crypto/tls/TlsStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/crypto/tls/TlsStream.cs,v
retrieving revision 1.1
diff -u -r1.1 TlsStream.cs
--- src/crypto/tls/TlsStream.cs	19 Jun 2010 09:35:34 -0000	1.1
+++ src/crypto/tls/TlsStream.cs	12 Feb 2013 05:55:22 -0000
@@ -29,12 +29,17 @@
 			get { return !handler.IsClosed; }
 		}
 
+#if PORTABLE
+        public virtual void Close()
+#else
 		public override void Close()
-		{
-			handler.Close();
-		}
+		
+#endif
+        {
+            handler.Close();
+        }
 
-		public override void Flush()
+        public override void Flush()
 		{
 			handler.Flush();
 		}
Index: src/math/BigInteger.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/math/BigInteger.cs,v
retrieving revision 1.134
diff -u -r1.134 BigInteger.cs
--- src/math/BigInteger.cs	15 Jan 2013 13:58:11 -0000	1.134
+++ src/math/BigInteger.cs	12 Feb 2013 05:55:22 -0000
@@ -8,10 +8,10 @@
 
 namespace Org.BouncyCastle.Math
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
 	[Serializable]
 #endif
-	public class BigInteger
+    public class BigInteger
 	{
 		// The first few odd primes
         /*
Index: src/ocsp/OCSPException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/ocsp/OCSPException.cs,v
retrieving revision 1.2
diff -u -r1.2 OCSPException.cs
--- src/ocsp/OCSPException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/ocsp/OCSPException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Ocsp
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class OcspException
Index: src/openpgp/PgpCompressedDataGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openpgp/PgpCompressedDataGenerator.cs,v
retrieving revision 1.16
diff -u -r1.16 PgpCompressedDataGenerator.cs
--- src/openpgp/PgpCompressedDataGenerator.cs	15 Feb 2011 06:05:21 -0000	1.16
+++ src/openpgp/PgpCompressedDataGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -155,8 +155,13 @@
 			{
 				if (dOut != pkOut)
 				{
+#if PORTABLE
+					dOut.Flush();
+					dOut.Dispose();
+#else
 					dOut.Close();
 					dOut.Flush();
+#endif
 				}
 
 				dOut = null;
Index: src/openpgp/PgpDataValidationException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openpgp/PgpDataValidationException.cs,v
retrieving revision 1.4
diff -u -r1.4 PgpDataValidationException.cs
--- src/openpgp/PgpDataValidationException.cs	24 Jan 2013 06:53:43 -0000	1.4
+++ src/openpgp/PgpDataValidationException.cs	12 Feb 2013 07:36:38 -0000
@@ -4,8 +4,8 @@
 {
 	/// <remarks>
 	/// Thrown if the IV at the start of a data stream indicates the wrong key is being used.
-	/// </remarks>
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+    /// </remarks>
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PgpDataValidationException
Index: src/openpgp/PgpException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openpgp/PgpException.cs,v
retrieving revision 1.6
diff -u -r1.6 PgpException.cs
--- src/openpgp/PgpException.cs	24 Jan 2013 06:53:43 -0000	1.6
+++ src/openpgp/PgpException.cs	12 Feb 2013 07:36:38 -0000
@@ -2,8 +2,8 @@
 
 namespace Org.BouncyCastle.Bcpg.OpenPgp
 {
-	/// <remarks>Generic exception class for PGP encoding/decoding problems.</remarks>
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+    /// <remarks>Generic exception class for PGP encoding/decoding problems.</remarks>
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PgpException
Index: src/openpgp/PgpKeyValidationException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openpgp/PgpKeyValidationException.cs,v
retrieving revision 1.5
diff -u -r1.5 PgpKeyValidationException.cs
--- src/openpgp/PgpKeyValidationException.cs	24 Jan 2013 06:53:43 -0000	1.5
+++ src/openpgp/PgpKeyValidationException.cs	12 Feb 2013 07:36:38 -0000
@@ -4,8 +4,8 @@
 {
 	/// <remarks>
 	/// Thrown if the key checksum is invalid.
-	/// </remarks>
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+    /// </remarks>
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PgpKeyValidationException
Index: src/openpgp/PgpLiteralDataGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openpgp/PgpLiteralDataGenerator.cs,v
retrieving revision 1.19
diff -u -r1.19 PgpLiteralDataGenerator.cs
--- src/openpgp/PgpLiteralDataGenerator.cs	21 Jan 2013 13:34:51 -0000	1.19
+++ src/openpgp/PgpLiteralDataGenerator.cs	12 Feb 2013 05:55:22 -0000
@@ -141,6 +141,7 @@
 			return new WrappedGeneratorStream(this, pkOut);
 		}
 
+#if !PORTABLE
 		/// <summary>
 		/// <p>
 		/// Open a literal data packet for the passed in <c>FileInfo</c> object, returning
@@ -162,8 +163,9 @@
         {
 			return Open(outStr, format, file.Name, file.Length, file.LastWriteTime);
         }
+#endif
 
-		/// <summary>
+        /// <summary>
 		/// Close the literal data packet - this is equivalent to calling Close()
 		/// on the stream returned by the Open() method.
 		/// </summary>
Index: src/openpgp/PgpUtilities.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openpgp/PgpUtilities.cs,v
retrieving revision 1.20
diff -u -r1.20 PgpUtilities.cs
--- src/openpgp/PgpUtilities.cs	15 Feb 2011 06:28:18 -0000	1.20
+++ src/openpgp/PgpUtilities.cs	12 Feb 2013 05:55:22 -0000
@@ -298,6 +298,7 @@
 			return MakeKey(algorithm, keyBytes);
         }
 
+#if !PORTABLE
 		/// <summary>Write out the passed in file as a literal data packet.</summary>
         public static void WriteFileToLiteralData(
             Stream		output,
@@ -335,6 +336,7 @@
 			pOut.Close();
 			inputStream.Close();
 		}
+#endif
 
 		private const int ReadAhead = 60;
 
Index: src/openssl/EncryptionException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openssl/EncryptionException.cs,v
retrieving revision 1.2
diff -u -r1.2 EncryptionException.cs
--- src/openssl/EncryptionException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/openssl/EncryptionException.cs	12 Feb 2013 07:36:38 -0000
@@ -3,7 +3,7 @@
 
 namespace Org.BouncyCastle.Security
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class EncryptionException
Index: src/openssl/MiscPemGenerator.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openssl/MiscPemGenerator.cs,v
retrieving revision 1.6
diff -u -r1.6 MiscPemGenerator.cs
--- src/openssl/MiscPemGenerator.cs	21 Jan 2013 13:04:23 -0000	1.6
+++ src/openssl/MiscPemGenerator.cs	12 Feb 2013 09:27:56 -0000
@@ -189,7 +189,7 @@
 			}
 
 
-			string dekAlgName = Platform.ToUpperInvariant(algorithm);
+		    string dekAlgName = Platform.ToUpperInvariant(algorithm);
 
             // Note: For backward compatibility
 			if (dekAlgName == "DESEDE")
Index: src/openssl/PEMException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openssl/PEMException.cs,v
retrieving revision 1.2
diff -u -r1.2 PEMException.cs
--- src/openssl/PEMException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/openssl/PEMException.cs	12 Feb 2013 07:36:38 -0000
@@ -3,7 +3,7 @@
 
 namespace Org.BouncyCastle.OpenSsl
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PemException
Index: src/openssl/PasswordException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/openssl/PasswordException.cs,v
retrieving revision 1.2
diff -u -r1.2 PasswordException.cs
--- src/openssl/PasswordException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/openssl/PasswordException.cs	12 Feb 2013 07:36:38 -0000
@@ -3,7 +3,7 @@
 
 namespace Org.BouncyCastle.Security
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PasswordException
Index: src/pkcs/AsymmetricKeyEntry.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/pkcs/AsymmetricKeyEntry.cs,v
retrieving revision 1.14
diff -u -r1.14 AsymmetricKeyEntry.cs
--- src/pkcs/AsymmetricKeyEntry.cs	19 Sep 2010 07:34:52 -0000	1.14
+++ src/pkcs/AsymmetricKeyEntry.cs	12 Feb 2013 05:55:22 -0000
@@ -18,7 +18,7 @@
             this.key = key;
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public AsymmetricKeyEntry(
             AsymmetricKeyParameter key,
Index: src/pkcs/Pkcs12Store.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/pkcs/Pkcs12Store.cs,v
retrieving revision 1.49
diff -u -r1.49 Pkcs12Store.cs
--- src/pkcs/Pkcs12Store.cs	21 Jan 2013 13:04:24 -0000	1.49
+++ src/pkcs/Pkcs12Store.cs	12 Feb 2013 11:23:50 -0000
@@ -258,8 +258,10 @@
 							}
 							else
 							{
+#if !PORTABLE
 								Console.WriteLine("extra " + b.BagID);
 								Console.WriteLine("extra " + Asn1Dump.DumpAsString(b));
+#endif
 							}
 						}
 					}
@@ -415,16 +417,20 @@
 								}
 							}
 							else
-							{
-								Console.WriteLine("extra " + b.BagID);
+                            {
+#if !PORTABLE
+                                Console.WriteLine("extra " + b.BagID);
 								Console.WriteLine("extra " + Asn1Dump.DumpAsString(b));
+#endif
 							}
 						}
 					}
 					else
 					{
+#if !PORTABLE
 						Console.WriteLine("extra " + oid);
 						Console.WriteLine("extra " + Asn1Dump.DumpAsString(ci.Content));
+#endif
 					}
 				}
 			}
Index: src/pkcs/X509CertificateEntry.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/pkcs/X509CertificateEntry.cs,v
retrieving revision 1.13
diff -u -r1.13 X509CertificateEntry.cs
--- src/pkcs/X509CertificateEntry.cs	19 Sep 2010 07:34:52 -0000	1.13
+++ src/pkcs/X509CertificateEntry.cs	12 Feb 2013 05:55:43 -0000
@@ -18,7 +18,7 @@
             this.cert = cert;
         }
 
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
         [Obsolete]
         public X509CertificateEntry(
             X509Certificate	cert,
Index: src/pkix/PkixCertPath.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/pkix/PkixCertPath.cs,v
retrieving revision 1.8
diff -u -r1.8 PkixCertPath.cs
--- src/pkix/PkixCertPath.cs	22 Sep 2010 17:54:04 -0000	1.8
+++ src/pkix/PkixCertPath.cs	12 Feb 2013 11:25:56 -0000
@@ -401,7 +401,11 @@
 						pWrt.WriteObject(certificates[i]);
 					}
 
+#if !PORTABLE
 					pWrt.Writer.Close();
+#else
+                    pWrt.Writer.Dispose();
+#endif
 				}
 				catch (Exception)
 				{
Index: src/pkix/PkixCertPathBuilderException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/pkix/PkixCertPathBuilderException.cs,v
retrieving revision 1.2
diff -u -r1.2 PkixCertPathBuilderException.cs
--- src/pkix/PkixCertPathBuilderException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/pkix/PkixCertPathBuilderException.cs	12 Feb 2013 07:36:38 -0000
@@ -6,8 +6,8 @@
 {
 	/// <summary>
 	/// Summary description for PkixCertPathBuilderException.
-	/// </summary>
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+    /// </summary>
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PkixCertPathBuilderException : GeneralSecurityException
Index: src/pkix/PkixCertPathValidatorException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/pkix/PkixCertPathValidatorException.cs,v
retrieving revision 1.2
diff -u -r1.2 PkixCertPathValidatorException.cs
--- src/pkix/PkixCertPathValidatorException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/pkix/PkixCertPathValidatorException.cs	12 Feb 2013 07:36:38 -0000
@@ -3,31 +3,31 @@
 
 namespace Org.BouncyCastle.Pkix
 {
-	/**
-	 * An exception indicating one of a variety of problems encountered when 
-	 * validating a certification path. <br />
-	 * <br />
-	 * A <code>CertPathValidatorException</code> provides support for wrapping
-	 * exceptions. The {@link #getCause getCause} method returns the throwable, 
-	 * if any, that caused this exception to be thrown. <br />
-	 * <br />
-	 * A <code>CertPathValidatorException</code> may also include the 
-	 * certification path that was being validated when the exception was thrown 
-	 * and the index of the certificate in the certification path that caused the 
-	 * exception to be thrown. Use the {@link #getCertPath getCertPath} and
-	 * {@link #getIndex getIndex} methods to retrieve this information.<br />
-	 * <br />
-	 * <b>Concurrent Access</b><br />
-	 * <br />
-	 * Unless otherwise specified, the methods defined in this class are not
-	 * thread-safe. Multiple threads that need to access a single
-	 * object concurrently should synchronize amongst themselves and
-	 * provide the necessary locking. Multiple threads each manipulating
-	 * separate objects need not synchronize.
-	 *
-	 * @see CertPathValidator
-	 **/
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+    /**
+     * An exception indicating one of a variety of problems encountered when 
+     * validating a certification path. <br />
+     * <br />
+     * A <code>CertPathValidatorException</code> provides support for wrapping
+     * exceptions. The {@link #getCause getCause} method returns the throwable, 
+     * if any, that caused this exception to be thrown. <br />
+     * <br />
+     * A <code>CertPathValidatorException</code> may also include the 
+     * certification path that was being validated when the exception was thrown 
+     * and the index of the certificate in the certification path that caused the 
+     * exception to be thrown. Use the {@link #getCertPath getCertPath} and
+     * {@link #getIndex getIndex} methods to retrieve this information.<br />
+     * <br />
+     * <b>Concurrent Access</b><br />
+     * <br />
+     * Unless otherwise specified, the methods defined in this class are not
+     * thread-safe. Multiple threads that need to access a single
+     * object concurrently should synchronize amongst themselves and
+     * provide the necessary locking. Multiple threads each manipulating
+     * separate objects need not synchronize.
+     *
+     * @see CertPathValidator
+     **/
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PkixCertPathValidatorException
Index: src/pkix/PkixNameConstraintValidatorException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/pkix/PkixNameConstraintValidatorException.cs,v
retrieving revision 1.2
diff -u -r1.2 PkixNameConstraintValidatorException.cs
--- src/pkix/PkixNameConstraintValidatorException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/pkix/PkixNameConstraintValidatorException.cs	12 Feb 2013 07:35:21 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Pkix
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PkixNameConstraintValidatorException
Index: src/security/DotNetUtilities.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/DotNetUtilities.cs,v
retrieving revision 1.16
diff -u -r1.16 DotNetUtilities.cs
--- src/security/DotNetUtilities.cs	1 Sep 2011 12:40:10 -0000	1.16
+++ src/security/DotNetUtilities.cs	12 Feb 2013 05:55:43 -0000
@@ -1,4 +1,4 @@
-#if !(NETCF_1_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || SILVERLIGHT || PORTABLE)
 
 using System;
 using System.Security.Cryptography;
Index: src/security/GeneralSecurityException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/GeneralSecurityException.cs,v
retrieving revision 1.4
diff -u -r1.4 GeneralSecurityException.cs
--- src/security/GeneralSecurityException.cs	24 Jan 2013 06:53:43 -0000	1.4
+++ src/security/GeneralSecurityException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class GeneralSecurityException
Index: src/security/InvalidKeyException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/InvalidKeyException.cs,v
retrieving revision 1.3
diff -u -r1.3 InvalidKeyException.cs
--- src/security/InvalidKeyException.cs	24 Jan 2013 06:53:43 -0000	1.3
+++ src/security/InvalidKeyException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class InvalidKeyException : KeyException
Index: src/security/InvalidParameterException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/InvalidParameterException.cs,v
retrieving revision 1.2
diff -u -r1.2 InvalidParameterException.cs
--- src/security/InvalidParameterException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/security/InvalidParameterException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class InvalidParameterException : KeyException
Index: src/security/KeyException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/KeyException.cs,v
retrieving revision 1.2
diff -u -r1.2 KeyException.cs
--- src/security/KeyException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/security/KeyException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class KeyException : GeneralSecurityException
Index: src/security/NoSuchAlgorithmException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/NoSuchAlgorithmException.cs,v
retrieving revision 1.3
diff -u -r1.3 NoSuchAlgorithmException.cs
--- src/security/NoSuchAlgorithmException.cs	24 Jan 2013 06:53:43 -0000	1.3
+++ src/security/NoSuchAlgorithmException.cs	12 Feb 2013 07:36:38 -0000
@@ -3,7 +3,7 @@
 namespace Org.BouncyCastle.Security
 {
 	[Obsolete("Never thrown")]
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class NoSuchAlgorithmException : GeneralSecurityException
Index: src/security/SecurityUtilityException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/SecurityUtilityException.cs,v
retrieving revision 1.6
diff -u -r1.6 SecurityUtilityException.cs
--- src/security/SecurityUtilityException.cs	24 Jan 2013 06:53:43 -0000	1.6
+++ src/security/SecurityUtilityException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class SecurityUtilityException
Index: src/security/SignatureException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/SignatureException.cs,v
retrieving revision 1.2
diff -u -r1.2 SignatureException.cs
--- src/security/SignatureException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/security/SignatureException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class SignatureException : GeneralSecurityException
Index: src/security/cert/CertificateEncodingException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/cert/CertificateEncodingException.cs,v
retrieving revision 1.2
diff -u -r1.2 CertificateEncodingException.cs
--- src/security/cert/CertificateEncodingException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/security/cert/CertificateEncodingException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security.Certificates
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CertificateEncodingException : CertificateException
Index: src/security/cert/CertificateException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/cert/CertificateException.cs,v
retrieving revision 1.2
diff -u -r1.2 CertificateException.cs
--- src/security/cert/CertificateException.cs	24 Jan 2013 06:53:43 -0000	1.2
+++ src/security/cert/CertificateException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security.Certificates
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CertificateException : GeneralSecurityException
Index: src/security/cert/CertificateExpiredException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/cert/CertificateExpiredException.cs,v
retrieving revision 1.2
diff -u -r1.2 CertificateExpiredException.cs
--- src/security/cert/CertificateExpiredException.cs	24 Jan 2013 06:53:44 -0000	1.2
+++ src/security/cert/CertificateExpiredException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security.Certificates
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CertificateExpiredException : CertificateException
Index: src/security/cert/CertificateNotYetValidException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/cert/CertificateNotYetValidException.cs,v
retrieving revision 1.2
diff -u -r1.2 CertificateNotYetValidException.cs
--- src/security/cert/CertificateNotYetValidException.cs	24 Jan 2013 06:53:44 -0000	1.2
+++ src/security/cert/CertificateNotYetValidException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security.Certificates
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CertificateNotYetValidException : CertificateException
Index: src/security/cert/CertificateParsingException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/cert/CertificateParsingException.cs,v
retrieving revision 1.2
diff -u -r1.2 CertificateParsingException.cs
--- src/security/cert/CertificateParsingException.cs	24 Jan 2013 06:53:44 -0000	1.2
+++ src/security/cert/CertificateParsingException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security.Certificates
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CertificateParsingException : CertificateException
Index: src/security/cert/CrlException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/security/cert/CrlException.cs,v
retrieving revision 1.3
diff -u -r1.3 CrlException.cs
--- src/security/cert/CrlException.cs	24 Jan 2013 06:53:44 -0000	1.3
+++ src/security/cert/CrlException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Security.Certificates
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class CrlException : GeneralSecurityException
Index: src/tsp/TSPException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/tsp/TSPException.cs,v
retrieving revision 1.2
diff -u -r1.2 TSPException.cs
--- src/tsp/TSPException.cs	24 Jan 2013 06:53:44 -0000	1.2
+++ src/tsp/TSPException.cs	12 Feb 2013 07:34:33 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Tsp
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class TspException
Index: src/tsp/TSPValidationException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/tsp/TSPValidationException.cs,v
retrieving revision 1.5
diff -u -r1.5 TSPValidationException.cs
--- src/tsp/TSPValidationException.cs	24 Jan 2013 06:53:44 -0000	1.5
+++ src/tsp/TSPValidationException.cs	12 Feb 2013 07:36:38 -0000
@@ -2,13 +2,13 @@
 
 namespace Org.BouncyCastle.Tsp
 {
-	/**
-	 * Exception thrown if a TSP request or response fails to validate.
-	 * <p>
-	 * If a failure code is associated with the exception it can be retrieved using
-	 * the getFailureCode() method.</p>
-	 */
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+    /**
+     * Exception thrown if a TSP request or response fails to validate.
+     * <p>
+     * If a failure code is associated with the exception it can be retrieved using
+     * the getFailureCode() method.</p>
+     */
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class TspValidationException
Index: src/util/Enums.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/Enums.cs,v
retrieving revision 1.5
diff -u -r1.5 Enums.cs
--- src/util/Enums.cs	1 Sep 2011 08:17:39 -0000	1.5
+++ src/util/Enums.cs	12 Feb 2013 05:55:43 -0000
@@ -1,7 +1,7 @@
 using System;
 using System.Text;
 
-#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT
+#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE
 using System.Collections;
 using System.Reflection;
 #endif
@@ -45,7 +45,7 @@
 			if (!enumType.IsEnum)
 				throw new ArgumentException("Not an enumeration type", "enumType");
 
-#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT
+#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE
             IList result = Platform.CreateArrayList();
 			FieldInfo[] fields = enumType.GetFields(BindingFlags.Static | BindingFlags.Public);
 			foreach (FieldInfo field in fields)
Index: src/util/Platform.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/Platform.cs,v
retrieving revision 1.9
diff -u -r1.9 Platform.cs
--- src/util/Platform.cs	21 Jan 2013 13:04:24 -0000	1.9
+++ src/util/Platform.cs	12 Feb 2013 08:50:35 -0000
@@ -3,7 +3,7 @@
 using System.IO;
 using System.Text;
 
-#if SILVERLIGHT
+#if SILVERLIGHT || PORTABLE
 using System.Collections.Generic;
 #else
 using System.Collections;
@@ -38,13 +38,15 @@
         {
 #if SILVERLIGHT
             return String.Compare(a, b, StringComparison.InvariantCultureIgnoreCase);
+#elif PORTABLE
+            return String.Compare(a, b, CultureInfo.InvariantCulture, CompareOptions.IgnoreCase);
 #else
             return String.Compare(a, b, true);
 #endif
         }
 
-#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT
-		internal static string GetEnvironmentVariable(
+#if NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE
+        internal static string GetEnvironmentVariable(
 			string variable)
 		{
 			return null;
@@ -87,7 +89,7 @@
 		}
 #endif
 
-#if SILVERLIGHT
+#if SILVERLIGHT || PORTABLE
         internal static System.Collections.IList CreateArrayList()
         {
             return new List<object>();
@@ -169,12 +171,20 @@
 
         internal static string ToLowerInvariant(string s)
         {
+#if PORTABLE
+            return s.ToLowerInvariant();
+#else
             return s.ToLower(CultureInfo.InvariantCulture);
+#endif
         }
 
         internal static string ToUpperInvariant(string s)
         {
+#if PORTABLE
+            return s.ToUpperInvariant();
+#else
             return s.ToUpper(CultureInfo.InvariantCulture);
+#endif
         }
 
         internal static readonly string NewLine = GetNewLine();
Index: src/util/Strings.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/Strings.cs,v
retrieving revision 1.5
diff -u -r1.5 Strings.cs
--- src/util/Strings.cs	10 Mar 2011 05:08:25 -0000	1.5
+++ src/util/Strings.cs	12 Feb 2013 05:55:43 -0000
@@ -56,7 +56,7 @@
         public static string FromAsciiByteArray(
             byte[] bytes)
         {
-#if SILVERLIGHT
+#if SILVERLIGHT || PORTABLE
             // TODO Check for non-ASCII bytes in input?
             return Encoding.UTF8.GetString(bytes, 0, bytes.Length);
 #else
@@ -67,7 +67,7 @@
         public static byte[] ToAsciiByteArray(
             char[] cs)
         {
-#if SILVERLIGHT
+#if SILVERLIGHT || PORTABLE
             // TODO Check for non-ASCII characters in input?
             return Encoding.UTF8.GetBytes(cs);
 #else
@@ -78,7 +78,7 @@
         public static byte[] ToAsciiByteArray(
             string s)
         {
-#if SILVERLIGHT
+#if SILVERLIGHT || PORTABLE
             // TODO Check for non-ASCII characters in input?
             return Encoding.UTF8.GetBytes(s);
 #else
Index: src/util/io/BaseInputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/io/BaseInputStream.cs,v
retrieving revision 1.3
diff -u -r1.3 BaseInputStream.cs
--- src/util/io/BaseInputStream.cs	17 Nov 2006 15:40:23 -0000	1.3
+++ src/util/io/BaseInputStream.cs	12 Feb 2013 05:55:43 -0000
@@ -11,8 +11,12 @@
 		public sealed override bool CanRead { get { return !closed; } }
         public sealed override bool CanSeek { get { return false; } }
         public sealed override bool CanWrite { get { return false; } }
+#if PORTABLE
+        public virtual void Close() { closed = true; }
+#else
 		public override void Close() { closed = true; }
-		public sealed override void Flush() {}
+#endif
+        public sealed override void Flush() {}
         public sealed override long Length { get { throw new NotSupportedException(); } }
         public sealed override long Position
         {
Index: src/util/io/BaseOutputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/io/BaseOutputStream.cs,v
retrieving revision 1.5
diff -u -r1.5 BaseOutputStream.cs
--- src/util/io/BaseOutputStream.cs	20 Nov 2006 04:29:47 -0000	1.5
+++ src/util/io/BaseOutputStream.cs	12 Feb 2013 05:55:43 -0000
@@ -11,7 +11,11 @@
 		public sealed override bool CanRead { get { return false; } }
         public sealed override bool CanSeek { get { return false; } }
         public sealed override bool CanWrite { get { return !closed; } }
+#if PORTABLE
+        public virtual void Close() { closed = true; }
+#else
 		public override void Close() { closed = true; }
+#endif
         public override void Flush() {}
         public sealed override long Length { get { throw new NotSupportedException(); } }
         public sealed override long Position
Index: src/util/io/StreamOverflowException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/io/StreamOverflowException.cs,v
retrieving revision 1.2
diff -u -r1.2 StreamOverflowException.cs
--- src/util/io/StreamOverflowException.cs	24 Jan 2013 06:53:44 -0000	1.2
+++ src/util/io/StreamOverflowException.cs	12 Feb 2013 07:35:20 -0000
@@ -3,7 +3,7 @@
 
 namespace Org.BouncyCastle.Utilities.IO
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class StreamOverflowException
Index: src/util/io/TeeInputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/io/TeeInputStream.cs,v
retrieving revision 1.1
diff -u -r1.1 TeeInputStream.cs
--- src/util/io/TeeInputStream.cs	8 Feb 2011 06:18:00 -0000	1.1
+++ src/util/io/TeeInputStream.cs	12 Feb 2013 05:55:43 -0000
@@ -20,8 +20,13 @@
 
 		public override void Close()
 		{
+#if PORTABLE
+			input.Dispose();
+			tee.Dispose();
+#else
 			input.Close();
 			tee.Close();
+#endif
 		}
 
 		public override int Read(byte[] buf, int off, int len)
Index: src/util/io/TeeOutputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/io/TeeOutputStream.cs,v
retrieving revision 1.1
diff -u -r1.1 TeeOutputStream.cs
--- src/util/io/TeeOutputStream.cs	22 Sep 2010 14:55:01 -0000	1.1
+++ src/util/io/TeeOutputStream.cs	12 Feb 2013 05:55:43 -0000
@@ -4,7 +4,7 @@
 
 namespace Org.BouncyCastle.Utilities.IO
 {
-    public class TeeOutputStream
+	public class TeeOutputStream
 		: BaseOutputStream
 	{
 		private readonly Stream output, tee;
@@ -20,8 +20,13 @@
 
 		public override void Close()
 		{
+#if PORTABLE
+			output.Dispose();
+			tee.Dispose();
+#else
 			output.Close();
 			tee.Close();
+#endif
 		}
 
 		public override void Write(byte[] buffer, int offset, int count)
Index: src/util/io/pem/PemGenerationException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/io/pem/PemGenerationException.cs,v
retrieving revision 1.2
diff -u -r1.2 PemGenerationException.cs
--- src/util/io/pem/PemGenerationException.cs	24 Jan 2013 06:53:44 -0000	1.2
+++ src/util/io/pem/PemGenerationException.cs	12 Feb 2013 07:33:28 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.Utilities.IO.Pem
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class PemGenerationException
Index: src/util/zlib/ZDeflaterOutputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/zlib/ZDeflaterOutputStream.cs,v
retrieving revision 1.5
diff -u -r1.5 ZDeflaterOutputStream.cs
--- src/util/zlib/ZDeflaterOutputStream.cs	15 Feb 2011 05:45:42 -0000	1.5
+++ src/util/zlib/ZDeflaterOutputStream.cs	12 Feb 2013 05:55:43 -0000
@@ -136,15 +136,23 @@
             z=null;
         }
         
+#if PORTABLE
+        public virtual void Close() {
+#else
         public override void Close() {
+#endif
             try{
                 try{Finish();}
                 catch (IOException) {}
             }
             finally{
                 End();
+#if PORTABLE
+                outp.Dispose();
+#else
                 outp.Close();
-                outp=null;
+#endif
+                outp =null;
             }
         }
     }
Index: src/util/zlib/ZInflaterInputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/zlib/ZInflaterInputStream.cs,v
retrieving revision 1.5
diff -u -r1.5 ZInflaterInputStream.cs
--- src/util/zlib/ZInflaterInputStream.cs	15 Feb 2011 04:58:40 -0000	1.5
+++ src/util/zlib/ZInflaterInputStream.cs	12 Feb 2013 05:55:43 -0000
@@ -114,10 +114,17 @@
         public override void WriteByte(byte b) {
         }
 
+#if PORTABLE
+        public virtual void Close()
+        {
+            inp.Dispose();
+        }
+#else
         public override void Close() {
             inp.Close();
         }
-    
+#endif
+
         public override int ReadByte() {
             if(Read(buf1, 0, 1)<=0)
                 return -1;
Index: src/util/zlib/ZInputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/zlib/ZInputStream.cs,v
retrieving revision 1.1
diff -u -r1.1 ZInputStream.cs
--- src/util/zlib/ZInputStream.cs	15 Feb 2011 05:47:13 -0000	1.1
+++ src/util/zlib/ZInputStream.cs	12 Feb 2013 05:55:43 -0000
@@ -93,13 +93,21 @@
 		public sealed override bool CanSeek { get { return false; } }
 		public sealed override bool CanWrite { get { return false; } }
 
+#if PORTABLE
+        public virtual void Close()
+#else
 		public override void Close()
+#endif
 		{
 			if (!closed)
 			{
 				closed = true;
+#if PORTABLE
+                input.Dispose();
+#else
 				input.Close();
-			}
+#endif
+            }
 		}
 
 		public sealed override void Flush() {}
Index: src/util/zlib/ZOutputStream.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/util/zlib/ZOutputStream.cs,v
retrieving revision 1.1
diff -u -r1.1 ZOutputStream.cs
--- src/util/zlib/ZOutputStream.cs	15 Feb 2011 05:47:13 -0000	1.1
+++ src/util/zlib/ZOutputStream.cs	12 Feb 2013 05:55:43 -0000
@@ -83,7 +83,11 @@
         public sealed override bool CanSeek { get { return false; } }
         public sealed override bool CanWrite { get { return !closed; } }
 
+#if PORTABLE
+        public virtual void Close()
+#else
 		public override void Close()
+#endif
 		{
 			if (this.closed)
 				return;
@@ -103,8 +107,12 @@
 			{
 				this.closed = true;
 				End();
+#if PORTABLE
+                output.Dispose();
+#else
 				output.Close();
-				output = null;
+#endif
+                output = null;
 			}
 		}
 
Index: src/x509/store/IX509Selector.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/x509/store/IX509Selector.cs,v
retrieving revision 1.2
diff -u -r1.2 IX509Selector.cs
--- src/x509/store/IX509Selector.cs	19 Sep 2010 07:34:53 -0000	1.2
+++ src/x509/store/IX509Selector.cs	12 Feb 2013 05:55:43 -0000
@@ -3,11 +3,11 @@
 namespace Org.BouncyCastle.X509.Store
 {
 	public interface IX509Selector
-#if !SILVERLIGHT
+#if !(SILVERLIGHT || PORTABLE)
 		: ICloneable
 #endif
-	{
-#if SILVERLIGHT
+    {
+#if SILVERLIGHT || PORTABLE
         object Clone();
 #endif
         bool Match(object obj);
Index: src/x509/store/NoSuchStoreException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/x509/store/NoSuchStoreException.cs,v
retrieving revision 1.2
diff -u -r1.2 NoSuchStoreException.cs
--- src/x509/store/NoSuchStoreException.cs	24 Jan 2013 06:53:44 -0000	1.2
+++ src/x509/store/NoSuchStoreException.cs	12 Feb 2013 07:33:20 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.X509.Store
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class NoSuchStoreException
Index: src/x509/store/X509StoreException.cs
===================================================================
RCS file: /home/users/bouncy/cvsroot/csharp/crypto/src/x509/store/X509StoreException.cs,v
retrieving revision 1.2
diff -u -r1.2 X509StoreException.cs
--- src/x509/store/X509StoreException.cs	24 Jan 2013 06:53:44 -0000	1.2
+++ src/x509/store/X509StoreException.cs	12 Feb 2013 07:33:10 -0000
@@ -2,7 +2,7 @@
 
 namespace Org.BouncyCastle.X509.Store
 {
-#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT)
+#if !(NETCF_1_0 || NETCF_2_0 || SILVERLIGHT || PORTABLE)
     [Serializable]
 #endif
     public class X509StoreException
--- crypto/crypto.portable.csproj
+++ crypto/crypto.portable.csproj
@@ -0,0 +1,1179 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
+  <PropertyGroup>
+    <MinimumVisualStudioVersion>10.0</MinimumVisualStudioVersion>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{9A5CFC1F-EC1B-4286-BD08-F55DA34739C4}</ProjectGuid>
+    <OutputType>Library</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>crypto.portable</RootNamespace>
+    <AssemblyName>crypto.portable</AssemblyName>
+    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
+    <TargetFrameworkProfile>Profile131</TargetFrameworkProfile>
+    <FileAlignment>512</FileAlignment>
+    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>TRACE;DEBUG;PORTABLE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE;PORTABLE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <!-- A reference to the entire .NET Framework is automatically included -->
+    <Folder Include="Properties\" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="bzip2\src\BZip2Constants.cs" />
+    <Compile Include="bzip2\src\CBZip2InputStream.cs" />
+    <Compile Include="bzip2\src\CBZip2OutputStream.cs" />
+    <Compile Include="bzip2\src\CRC.cs" />
+    <Compile Include="src\asn1\Asn1Encodable.cs" />
+    <Compile Include="src\asn1\Asn1EncodableVector.cs" />
+    <Compile Include="src\asn1\Asn1Exception.cs" />
+    <Compile Include="src\asn1\ASN1Generator.cs" />
+    <Compile Include="src\asn1\Asn1InputStream.cs" />
+    <Compile Include="src\asn1\Asn1Null.cs" />
+    <Compile Include="src\asn1\Asn1Object.cs" />
+    <Compile Include="src\asn1\Asn1OctetString.cs" />
+    <Compile Include="src\asn1\ASN1OctetStringParser.cs" />
+    <Compile Include="src\asn1\Asn1OutputStream.cs" />
+    <Compile Include="src\asn1\Asn1ParsingException.cs" />
+    <Compile Include="src\asn1\Asn1Sequence.cs" />
+    <Compile Include="src\asn1\ASN1SequenceParser.cs" />
+    <Compile Include="src\asn1\Asn1Set.cs" />
+    <Compile Include="src\asn1\ASN1SetParser.cs" />
+    <Compile Include="src\asn1\ASN1StreamParser.cs" />
+    <Compile Include="src\asn1\Asn1TaggedObject.cs" />
+    <Compile Include="src\asn1\ASN1TaggedObjectParser.cs" />
+    <Compile Include="src\asn1\Asn1Tags.cs" />
+    <Compile Include="src\asn1\bc\BCObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\BerApplicationSpecific.cs" />
+    <Compile Include="src\asn1\BerApplicationSpecificParser.cs" />
+    <Compile Include="src\asn1\BERGenerator.cs" />
+    <Compile Include="src\asn1\BerNull.cs" />
+    <Compile Include="src\asn1\BerOctetString.cs" />
+    <Compile Include="src\asn1\BEROctetStringGenerator.cs" />
+    <Compile Include="src\asn1\BEROctetStringParser.cs" />
+    <Compile Include="src\asn1\BerOutputStream.cs" />
+    <Compile Include="src\asn1\BerSequence.cs" />
+    <Compile Include="src\asn1\BERSequenceGenerator.cs" />
+    <Compile Include="src\asn1\BERSequenceParser.cs" />
+    <Compile Include="src\asn1\BerSet.cs" />
+    <Compile Include="src\asn1\BERSetGenerator.cs" />
+    <Compile Include="src\asn1\BERSetParser.cs" />
+    <Compile Include="src\asn1\BerTaggedObject.cs" />
+    <Compile Include="src\asn1\BERTaggedObjectParser.cs" />
+    <Compile Include="src\asn1\cmp\CAKeyUpdAnnContent.cs" />
+    <Compile Include="src\asn1\cmp\CertConfirmContent.cs" />
+    <Compile Include="src\asn1\cmp\CertifiedKeyPair.cs" />
+    <Compile Include="src\asn1\cmp\CertOrEncCert.cs" />
+    <Compile Include="src\asn1\cmp\CertRepMessage.cs" />
+    <Compile Include="src\asn1\cmp\CertResponse.cs" />
+    <Compile Include="src\asn1\cmp\CertStatus.cs" />
+    <Compile Include="src\asn1\cmp\Challenge.cs" />
+    <Compile Include="src\asn1\cmp\CmpCertificate.cs" />
+    <Compile Include="src\asn1\cmp\CmpObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\cmp\CrlAnnContent.cs" />
+    <Compile Include="src\asn1\cmp\ErrorMsgContent.cs" />
+    <Compile Include="src\asn1\cmp\GenMsgContent.cs" />
+    <Compile Include="src\asn1\cmp\GenRepContent.cs" />
+    <Compile Include="src\asn1\cmp\InfoTypeAndValue.cs" />
+    <Compile Include="src\asn1\cmp\KeyRecRepContent.cs" />
+    <Compile Include="src\asn1\cmp\OobCertHash.cs" />
+    <Compile Include="src\asn1\cmp\PbmParameter.cs" />
+    <Compile Include="src\asn1\cmp\PKIBody.cs" />
+    <Compile Include="src\asn1\cmp\PKIConfirmContent.cs" />
+    <Compile Include="src\asn1\cmp\PKIFailureInfo.cs" />
+    <Compile Include="src\asn1\cmp\PKIFreeText.cs" />
+    <Compile Include="src\asn1\cmp\PKIHeader.cs" />
+    <Compile Include="src\asn1\cmp\PKIHeaderBuilder.cs" />
+    <Compile Include="src\asn1\cmp\PKIMessage.cs" />
+    <Compile Include="src\asn1\cmp\PKIMessages.cs" />
+    <Compile Include="src\asn1\cmp\PKIStatus.cs" />
+    <Compile Include="src\asn1\cmp\PKIStatusInfo.cs" />
+    <Compile Include="src\asn1\cmp\PollRepContent.cs" />
+    <Compile Include="src\asn1\cmp\PollReqContent.cs" />
+    <Compile Include="src\asn1\cmp\PopoDecKeyChallContent.cs" />
+    <Compile Include="src\asn1\cmp\PopoDecKeyRespContent.cs" />
+    <Compile Include="src\asn1\cmp\ProtectedPart.cs" />
+    <Compile Include="src\asn1\cmp\RevAnnContent.cs" />
+    <Compile Include="src\asn1\cmp\RevDetails.cs" />
+    <Compile Include="src\asn1\cmp\RevRepContent.cs" />
+    <Compile Include="src\asn1\cmp\RevRepContentBuilder.cs" />
+    <Compile Include="src\asn1\cmp\RevReqContent.cs" />
+    <Compile Include="src\asn1\cms\Attribute.cs" />
+    <Compile Include="src\asn1\cms\Attributes.cs" />
+    <Compile Include="src\asn1\cms\AttributeTable.cs" />
+    <Compile Include="src\asn1\cms\AuthenticatedData.cs" />
+    <Compile Include="src\asn1\cms\AuthenticatedDataParser.cs" />
+    <Compile Include="src\asn1\cms\AuthEnvelopedData.cs" />
+    <Compile Include="src\asn1\cms\AuthEnvelopedDataParser.cs" />
+    <Compile Include="src\asn1\cms\CMSAttributes.cs" />
+    <Compile Include="src\asn1\cms\CMSObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\cms\CompressedData.cs" />
+    <Compile Include="src\asn1\cms\CompressedDataParser.cs" />
+    <Compile Include="src\asn1\cms\ContentInfo.cs" />
+    <Compile Include="src\asn1\cms\ContentInfoParser.cs" />
+    <Compile Include="src\asn1\cms\ecc\MQVuserKeyingMaterial.cs" />
+    <Compile Include="src\asn1\cms\EncryptedContentInfo.cs" />
+    <Compile Include="src\asn1\cms\EncryptedContentInfoParser.cs" />
+    <Compile Include="src\asn1\cms\EncryptedData.cs" />
+    <Compile Include="src\asn1\cms\EnvelopedData.cs" />
+    <Compile Include="src\asn1\cms\EnvelopedDataParser.cs" />
+    <Compile Include="src\asn1\cms\Evidence.cs" />
+    <Compile Include="src\asn1\cms\IssuerAndSerialNumber.cs" />
+    <Compile Include="src\asn1\cms\KEKIdentifier.cs" />
+    <Compile Include="src\asn1\cms\KEKRecipientInfo.cs" />
+    <Compile Include="src\asn1\cms\KeyAgreeRecipientIdentifier.cs" />
+    <Compile Include="src\asn1\cms\KeyAgreeRecipientInfo.cs" />
+    <Compile Include="src\asn1\cms\KeyTransRecipientInfo.cs" />
+    <Compile Include="src\asn1\cms\MetaData.cs" />
+    <Compile Include="src\asn1\cms\OriginatorIdentifierOrKey.cs" />
+    <Compile Include="src\asn1\cms\OriginatorInfo.cs" />
+    <Compile Include="src\asn1\cms\OriginatorPublicKey.cs" />
+    <Compile Include="src\asn1\cms\OtherKeyAttribute.cs" />
+    <Compile Include="src\asn1\cms\OtherRecipientInfo.cs" />
+    <Compile Include="src\asn1\cms\PasswordRecipientInfo.cs" />
+    <Compile Include="src\asn1\cms\RecipientEncryptedKey.cs" />
+    <Compile Include="src\asn1\cms\RecipientIdentifier.cs" />
+    <Compile Include="src\asn1\cms\RecipientInfo.cs" />
+    <Compile Include="src\asn1\cms\RecipientKeyIdentifier.cs" />
+    <Compile Include="src\asn1\cms\SignedData.cs" />
+    <Compile Include="src\asn1\cms\SignedDataParser.cs" />
+    <Compile Include="src\asn1\cms\SignerIdentifier.cs" />
+    <Compile Include="src\asn1\cms\SignerInfo.cs" />
+    <Compile Include="src\asn1\cms\Time.cs" />
+    <Compile Include="src\asn1\cms\TimeStampAndCRL.cs" />
+    <Compile Include="src\asn1\cms\TimeStampedData.cs" />
+    <Compile Include="src\asn1\cms\TimeStampedDataParser.cs" />
+    <Compile Include="src\asn1\cms\TimeStampTokenEvidence.cs" />
+    <Compile Include="src\asn1\ConstructedOctetStream.cs" />
+    <Compile Include="src\asn1\crmf\AttributeTypeAndValue.cs" />
+    <Compile Include="src\asn1\crmf\CertId.cs" />
+    <Compile Include="src\asn1\crmf\CertReqMessages.cs" />
+    <Compile Include="src\asn1\crmf\CertReqMsg.cs" />
+    <Compile Include="src\asn1\crmf\CertRequest.cs" />
+    <Compile Include="src\asn1\crmf\CertTemplate.cs" />
+    <Compile Include="src\asn1\crmf\CertTemplateBuilder.cs" />
+    <Compile Include="src\asn1\crmf\Controls.cs" />
+    <Compile Include="src\asn1\crmf\CrmfObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\crmf\EncKeyWithID.cs" />
+    <Compile Include="src\asn1\crmf\EncryptedKey.cs" />
+    <Compile Include="src\asn1\crmf\EncryptedValue.cs" />
+    <Compile Include="src\asn1\crmf\OptionalValidity.cs" />
+    <Compile Include="src\asn1\crmf\PKIArchiveOptions.cs" />
+    <Compile Include="src\asn1\crmf\PKIPublicationInfo.cs" />
+    <Compile Include="src\asn1\crmf\PKMacValue.cs" />
+    <Compile Include="src\asn1\crmf\PopoPrivKey.cs" />
+    <Compile Include="src\asn1\crmf\PopoSigningKey.cs" />
+    <Compile Include="src\asn1\crmf\PopoSigningKeyInput.cs" />
+    <Compile Include="src\asn1\crmf\ProofOfPossession.cs" />
+    <Compile Include="src\asn1\crmf\SinglePubInfo.cs" />
+    <Compile Include="src\asn1\crmf\SubsequentMessage.cs" />
+    <Compile Include="src\asn1\cryptopro\CryptoProObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\cryptopro\ECGOST3410NamedCurves.cs" />
+    <Compile Include="src\asn1\cryptopro\ECGOST3410ParamSetParameters.cs" />
+    <Compile Include="src\asn1\cryptopro\GOST28147Parameters.cs" />
+    <Compile Include="src\asn1\cryptopro\GOST3410NamedParameters.cs" />
+    <Compile Include="src\asn1\cryptopro\GOST3410ParamSetParameters.cs" />
+    <Compile Include="src\asn1\cryptopro\GOST3410PublicKeyAlgParameters.cs" />
+    <Compile Include="src\asn1\DefiniteLengthInputStream.cs" />
+    <Compile Include="src\asn1\DerApplicationSpecific.cs" />
+    <Compile Include="src\asn1\DerBitString.cs" />
+    <Compile Include="src\asn1\DerBMPString.cs" />
+    <Compile Include="src\asn1\DerBoolean.cs" />
+    <Compile Include="src\asn1\DerEnumerated.cs" />
+    <Compile Include="src\asn1\DERExternal.cs" />
+    <Compile Include="src\asn1\DERExternalParser.cs" />
+    <Compile Include="src\asn1\DerGeneralizedTime.cs" />
+    <Compile Include="src\asn1\DerGeneralString.cs" />
+    <Compile Include="src\asn1\DERGenerator.cs" />
+    <Compile Include="src\asn1\DerIA5String.cs" />
+    <Compile Include="src\asn1\DerInteger.cs" />
+    <Compile Include="src\asn1\DerNull.cs" />
+    <Compile Include="src\asn1\DerNumericString.cs" />
+    <Compile Include="src\asn1\DerObjectIdentifier.cs" />
+    <Compile Include="src\asn1\DerOctetString.cs" />
+    <Compile Include="src\asn1\DEROctetStringParser.cs" />
+    <Compile Include="src\asn1\DerOutputStream.cs" />
+    <Compile Include="src\asn1\DerPrintableString.cs" />
+    <Compile Include="src\asn1\DerSequence.cs" />
+    <Compile Include="src\asn1\DERSequenceGenerator.cs" />
+    <Compile Include="src\asn1\DERSequenceParser.cs" />
+    <Compile Include="src\asn1\DerSet.cs" />
+    <Compile Include="src\asn1\DERSetGenerator.cs" />
+    <Compile Include="src\asn1\DERSetParser.cs" />
+    <Compile Include="src\asn1\DerStringBase.cs" />
+    <Compile Include="src\asn1\DerT61String.cs" />
+    <Compile Include="src\asn1\DerTaggedObject.cs" />
+    <Compile Include="src\asn1\DerUniversalString.cs" />
+    <Compile Include="src\asn1\DerUnknownTag.cs" />
+    <Compile Include="src\asn1\DerUTCTime.cs" />
+    <Compile Include="src\asn1\DerUTF8String.cs" />
+    <Compile Include="src\asn1\DerVisibleString.cs" />
+    <Compile Include="src\asn1\eac\EACObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\esf\CertificateValues.cs" />
+    <Compile Include="src\asn1\esf\CommitmentTypeIdentifier.cs" />
+    <Compile Include="src\asn1\esf\CommitmentTypeIndication.cs" />
+    <Compile Include="src\asn1\esf\CommitmentTypeQualifier.cs" />
+    <Compile Include="src\asn1\esf\CompleteCertificateRefs.cs" />
+    <Compile Include="src\asn1\esf\CompleteRevocationRefs.cs" />
+    <Compile Include="src\asn1\esf\CrlIdentifier.cs" />
+    <Compile Include="src\asn1\esf\CrlListID.cs" />
+    <Compile Include="src\asn1\esf\CrlOcspRef.cs" />
+    <Compile Include="src\asn1\esf\CrlValidatedID.cs" />
+    <Compile Include="src\asn1\esf\ESFAttributes.cs" />
+    <Compile Include="src\asn1\esf\OcspIdentifier.cs" />
+    <Compile Include="src\asn1\esf\OcspListID.cs" />
+    <Compile Include="src\asn1\esf\OcspResponsesID.cs" />
+    <Compile Include="src\asn1\esf\OtherCertID.cs" />
+    <Compile Include="src\asn1\esf\OtherHash.cs" />
+    <Compile Include="src\asn1\esf\OtherHashAlgAndValue.cs" />
+    <Compile Include="src\asn1\esf\OtherRevRefs.cs" />
+    <Compile Include="src\asn1\esf\OtherRevVals.cs" />
+    <Compile Include="src\asn1\esf\OtherSigningCertificate.cs" />
+    <Compile Include="src\asn1\esf\RevocationValues.cs" />
+    <Compile Include="src\asn1\esf\SignaturePolicyId.cs" />
+    <Compile Include="src\asn1\esf\SignaturePolicyIdentifier.cs" />
+    <Compile Include="src\asn1\esf\SignerAttribute.cs" />
+    <Compile Include="src\asn1\esf\SignerLocation.cs" />
+    <Compile Include="src\asn1\esf\SigPolicyQualifierInfo.cs" />
+    <Compile Include="src\asn1\ess\ContentHints.cs" />
+    <Compile Include="src\asn1\ess\ContentIdentifier.cs" />
+    <Compile Include="src\asn1\ess\ESSCertID.cs" />
+    <Compile Include="src\asn1\ess\ESSCertIDv2.cs" />
+    <Compile Include="src\asn1\ess\OtherCertID.cs" />
+    <Compile Include="src\asn1\ess\OtherSigningCertificate.cs" />
+    <Compile Include="src\asn1\ess\SigningCertificate.cs" />
+    <Compile Include="src\asn1\ess\SigningCertificateV2.cs" />
+    <Compile Include="src\asn1\gnu\GNUObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\iana\IANAObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\IAsn1ApplicationSpecificParser.cs" />
+    <Compile Include="src\asn1\IAsn1Choice.cs" />
+    <Compile Include="src\asn1\IAsn1Convertible.cs" />
+    <Compile Include="src\asn1\IAsn1String.cs" />
+    <Compile Include="src\asn1\icao\CscaMasterList.cs" />
+    <Compile Include="src\asn1\icao\DataGroupHash.cs" />
+    <Compile Include="src\asn1\icao\ICAOObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\icao\LDSSecurityObject.cs" />
+    <Compile Include="src\asn1\icao\LDSVersionInfo.cs" />
+    <Compile Include="src\asn1\IndefiniteLengthInputStream.cs" />
+    <Compile Include="src\asn1\isismtt\ISISMTTObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\isismtt\ocsp\CertHash.cs" />
+    <Compile Include="src\asn1\isismtt\ocsp\RequestedCertificate.cs" />
+    <Compile Include="src\asn1\isismtt\x509\AdditionalInformationSyntax.cs" />
+    <Compile Include="src\asn1\isismtt\x509\Admissions.cs" />
+    <Compile Include="src\asn1\isismtt\x509\AdmissionSyntax.cs" />
+    <Compile Include="src\asn1\isismtt\x509\DeclarationOfMajority.cs" />
+    <Compile Include="src\asn1\isismtt\x509\MonetaryLimit.cs" />
+    <Compile Include="src\asn1\isismtt\x509\NamingAuthority.cs" />
+    <Compile Include="src\asn1\isismtt\x509\ProcurationSyntax.cs" />
+    <Compile Include="src\asn1\isismtt\x509\ProfessionInfo.cs" />
+    <Compile Include="src\asn1\isismtt\x509\Restriction.cs" />
+    <Compile Include="src\asn1\kisa\KISAObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\LazyASN1InputStream.cs" />
+    <Compile Include="src\asn1\LazyDERSequence.cs" />
+    <Compile Include="src\asn1\LazyDERSet.cs" />
+    <Compile Include="src\asn1\LimitedInputStream.cs" />
+    <Compile Include="src\asn1\microsoft\MicrosoftObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\misc\CAST5CBCParameters.cs" />
+    <Compile Include="src\asn1\misc\IDEACBCPar.cs" />
+    <Compile Include="src\asn1\misc\MiscObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\misc\NetscapeCertType.cs" />
+    <Compile Include="src\asn1\misc\NetscapeRevocationURL.cs" />
+    <Compile Include="src\asn1\misc\VerisignCzagExtension.cs" />
+    <Compile Include="src\asn1\mozilla\PublicKeyAndChallenge.cs" />
+    <Compile Include="src\asn1\nist\NISTNamedCurves.cs" />
+    <Compile Include="src\asn1\nist\NISTObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\ntt\NTTObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\ocsp\BasicOCSPResponse.cs" />
+    <Compile Include="src\asn1\ocsp\CertID.cs" />
+    <Compile Include="src\asn1\ocsp\CertStatus.cs" />
+    <Compile Include="src\asn1\ocsp\CrlID.cs" />
+    <Compile Include="src\asn1\ocsp\OCSPObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\ocsp\OCSPRequest.cs" />
+    <Compile Include="src\asn1\ocsp\OCSPResponse.cs" />
+    <Compile Include="src\asn1\ocsp\OCSPResponseStatus.cs" />
+    <Compile Include="src\asn1\ocsp\Request.cs" />
+    <Compile Include="src\asn1\ocsp\ResponderID.cs" />
+    <Compile Include="src\asn1\ocsp\ResponseBytes.cs" />
+    <Compile Include="src\asn1\ocsp\ResponseData.cs" />
+    <Compile Include="src\asn1\ocsp\RevokedInfo.cs" />
+    <Compile Include="src\asn1\ocsp\ServiceLocator.cs" />
+    <Compile Include="src\asn1\ocsp\Signature.cs" />
+    <Compile Include="src\asn1\ocsp\SingleResponse.cs" />
+    <Compile Include="src\asn1\ocsp\TBSRequest.cs" />
+    <Compile Include="src\asn1\OidTokenizer.cs" />
+    <Compile Include="src\asn1\oiw\ElGamalParameter.cs" />
+    <Compile Include="src\asn1\oiw\OIWObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\pkcs\Attribute.cs" />
+    <Compile Include="src\asn1\pkcs\AuthenticatedSafe.cs" />
+    <Compile Include="src\asn1\pkcs\CertBag.cs" />
+    <Compile Include="src\asn1\pkcs\CertificationRequest.cs" />
+    <Compile Include="src\asn1\pkcs\CertificationRequestInfo.cs" />
+    <Compile Include="src\asn1\pkcs\ContentInfo.cs" />
+    <Compile Include="src\asn1\pkcs\DHParameter.cs" />
+    <Compile Include="src\asn1\pkcs\EncryptedData.cs" />
+    <Compile Include="src\asn1\pkcs\EncryptedPrivateKeyInfo.cs" />
+    <Compile Include="src\asn1\pkcs\EncryptionScheme.cs" />
+    <Compile Include="src\asn1\pkcs\IssuerAndSerialNumber.cs" />
+    <Compile Include="src\asn1\pkcs\KeyDerivationFunc.cs" />
+    <Compile Include="src\asn1\pkcs\MacData.cs" />
+    <Compile Include="src\asn1\pkcs\PBEParameter.cs" />
+    <Compile Include="src\asn1\pkcs\PBES2Parameters.cs" />
+    <Compile Include="src\asn1\pkcs\PBKDF2Params.cs" />
+    <Compile Include="src\asn1\pkcs\Pfx.cs" />
+    <Compile Include="src\asn1\pkcs\PKCS12PBEParams.cs" />
+    <Compile Include="src\asn1\pkcs\PKCSObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\pkcs\PrivateKeyInfo.cs" />
+    <Compile Include="src\asn1\pkcs\RC2CBCParameter.cs" />
+    <Compile Include="src\asn1\pkcs\RSAESOAEPparams.cs" />
+    <Compile Include="src\asn1\pkcs\RSAPrivateKeyStructure.cs" />
+    <Compile Include="src\asn1\pkcs\RSASSAPSSparams.cs" />
+    <Compile Include="src\asn1\pkcs\SafeBag.cs" />
+    <Compile Include="src\asn1\pkcs\SignedData.cs" />
+    <Compile Include="src\asn1\pkcs\SignerInfo.cs" />
+    <Compile Include="src\asn1\sec\ECPrivateKeyStructure.cs" />
+    <Compile Include="src\asn1\sec\SECNamedCurves.cs" />
+    <Compile Include="src\asn1\sec\SECObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\smime\SMIMEAttributes.cs" />
+    <Compile Include="src\asn1\smime\SMIMECapabilities.cs" />
+    <Compile Include="src\asn1\smime\SMIMECapabilitiesAttribute.cs" />
+    <Compile Include="src\asn1\smime\SMIMECapability.cs" />
+    <Compile Include="src\asn1\smime\SMIMECapabilityVector.cs" />
+    <Compile Include="src\asn1\smime\SMIMEEncryptionKeyPreferenceAttribute.cs" />
+    <Compile Include="src\asn1\teletrust\TeleTrusTNamedCurves.cs" />
+    <Compile Include="src\asn1\teletrust\TeleTrusTObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\tsp\Accuracy.cs" />
+    <Compile Include="src\asn1\tsp\MessageImprint.cs" />
+    <Compile Include="src\asn1\tsp\TimeStampReq.cs" />
+    <Compile Include="src\asn1\tsp\TimeStampResp.cs" />
+    <Compile Include="src\asn1\tsp\TSTInfo.cs" />
+    <Compile Include="src\asn1\util\Asn1Dump.cs" />
+    <Compile Include="src\asn1\util\Dump.cs" />
+    <Compile Include="src\asn1\util\FilterStream.cs" />
+    <Compile Include="src\asn1\x500\DirectoryString.cs" />
+    <Compile Include="src\asn1\x509\AccessDescription.cs" />
+    <Compile Include="src\asn1\x509\AlgorithmIdentifier.cs" />
+    <Compile Include="src\asn1\x509\AttCertIssuer.cs" />
+    <Compile Include="src\asn1\x509\AttCertValidityPeriod.cs" />
+    <Compile Include="src\asn1\x509\Attribute.cs" />
+    <Compile Include="src\asn1\x509\AttributeCertificate.cs" />
+    <Compile Include="src\asn1\x509\AttributeCertificateInfo.cs" />
+    <Compile Include="src\asn1\x509\AttributeTable.cs" />
+    <Compile Include="src\asn1\x509\AuthorityInformationAccess.cs" />
+    <Compile Include="src\asn1\x509\AuthorityKeyIdentifier.cs" />
+    <Compile Include="src\asn1\x509\BasicConstraints.cs" />
+    <Compile Include="src\asn1\x509\CertificateList.cs" />
+    <Compile Include="src\asn1\x509\CertificatePair.cs" />
+    <Compile Include="src\asn1\x509\CertPolicyId.cs" />
+    <Compile Include="src\asn1\x509\CRLDistPoint.cs" />
+    <Compile Include="src\asn1\x509\CRLNumber.cs" />
+    <Compile Include="src\asn1\x509\CRLReason.cs" />
+    <Compile Include="src\asn1\x509\DigestInfo.cs" />
+    <Compile Include="src\asn1\x509\DisplayText.cs" />
+    <Compile Include="src\asn1\x509\DistributionPoint.cs" />
+    <Compile Include="src\asn1\x509\DistributionPointName.cs" />
+    <Compile Include="src\asn1\x509\DSAParameter.cs" />
+    <Compile Include="src\asn1\x509\ExtendedKeyUsage.cs" />
+    <Compile Include="src\asn1\x509\GeneralName.cs" />
+    <Compile Include="src\asn1\x509\GeneralNames.cs" />
+    <Compile Include="src\asn1\x509\GeneralSubtree.cs" />
+    <Compile Include="src\asn1\x509\Holder.cs" />
+    <Compile Include="src\asn1\x509\IetfAttrSyntax.cs" />
+    <Compile Include="src\asn1\x509\IssuerSerial.cs" />
+    <Compile Include="src\asn1\x509\IssuingDistributionPoint.cs" />
+    <Compile Include="src\asn1\x509\KeyPurposeId.cs" />
+    <Compile Include="src\asn1\x509\KeyUsage.cs" />
+    <Compile Include="src\asn1\x509\NameConstraints.cs" />
+    <Compile Include="src\asn1\x509\NoticeReference.cs" />
+    <Compile Include="src\asn1\x509\ObjectDigestInfo.cs" />
+    <Compile Include="src\asn1\x509\PolicyInformation.cs" />
+    <Compile Include="src\asn1\x509\PolicyMappings.cs" />
+    <Compile Include="src\asn1\x509\PolicyQualifierId.cs" />
+    <Compile Include="src\asn1\x509\PolicyQualifierInfo.cs" />
+    <Compile Include="src\asn1\x509\PrivateKeyUsagePeriod.cs" />
+    <Compile Include="src\asn1\x509\qualified\BiometricData.cs" />
+    <Compile Include="src\asn1\x509\qualified\ETSIQCObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\x509\qualified\Iso4217CurrencyCode.cs" />
+    <Compile Include="src\asn1\x509\qualified\MonetaryValue.cs" />
+    <Compile Include="src\asn1\x509\qualified\QCStatement.cs" />
+    <Compile Include="src\asn1\x509\qualified\RFC3739QCObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\x509\qualified\SemanticsInformation.cs" />
+    <Compile Include="src\asn1\x509\qualified\TypeOfBiometricData.cs" />
+    <Compile Include="src\asn1\x509\ReasonFlags.cs" />
+    <Compile Include="src\asn1\x509\RoleSyntax.cs" />
+    <Compile Include="src\asn1\x509\RSAPublicKeyStructure.cs" />
+    <Compile Include="src\asn1\x509\sigi\NameOrPseudonym.cs" />
+    <Compile Include="src\asn1\x509\sigi\PersonalData.cs" />
+    <Compile Include="src\asn1\x509\sigi\SigIObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\x509\SubjectDirectoryAttributes.cs" />
+    <Compile Include="src\asn1\x509\SubjectKeyIdentifier.cs" />
+    <Compile Include="src\asn1\x509\SubjectPublicKeyInfo.cs" />
+    <Compile Include="src\asn1\x509\Target.cs" />
+    <Compile Include="src\asn1\x509\TargetInformation.cs" />
+    <Compile Include="src\asn1\x509\Targets.cs" />
+    <Compile Include="src\asn1\x509\TBSCertificateStructure.cs" />
+    <Compile Include="src\asn1\x509\TBSCertList.cs" />
+    <Compile Include="src\asn1\x509\Time.cs" />
+    <Compile Include="src\asn1\x509\UserNotice.cs" />
+    <Compile Include="src\asn1\x509\V1TBSCertificateGenerator.cs" />
+    <Compile Include="src\asn1\x509\V2AttributeCertificateInfoGenerator.cs" />
+    <Compile Include="src\asn1\x509\V2Form.cs" />
+    <Compile Include="src\asn1\x509\V2TBSCertListGenerator.cs" />
+    <Compile Include="src\asn1\x509\V3TBSCertificateGenerator.cs" />
+    <Compile Include="src\asn1\x509\X509Attributes.cs" />
+    <Compile Include="src\asn1\x509\X509CertificateStructure.cs" />
+    <Compile Include="src\asn1\x509\X509DefaultEntryConverter.cs" />
+    <Compile Include="src\asn1\x509\X509Extension.cs" />
+    <Compile Include="src\asn1\x509\X509Extensions.cs" />
+    <Compile Include="src\asn1\x509\X509ExtensionsGenerator.cs" />
+    <Compile Include="src\asn1\x509\X509Name.cs" />
+    <Compile Include="src\asn1\x509\X509NameEntryConverter.cs" />
+    <Compile Include="src\asn1\x509\X509NameTokenizer.cs" />
+    <Compile Include="src\asn1\x509\X509ObjectIdentifiers.cs" />
+    <Compile Include="src\asn1\x9\DHDomainParameters.cs" />
+    <Compile Include="src\asn1\x9\DHPublicKey.cs" />
+    <Compile Include="src\asn1\x9\DHValidationParms.cs" />
+    <Compile Include="src\asn1\x9\KeySpecificInfo.cs" />
+    <Compile Include="src\asn1\x9\OtherInfo.cs" />
+    <Compile Include="src\asn1\x9\X962NamedCurves.cs" />
+    <Compile Include="src\asn1\x9\X962Parameters.cs" />
+    <Compile Include="src\asn1\x9\X9Curve.cs" />
+    <Compile Include="src\asn1\x9\X9ECParameters.cs" />
+    <Compile Include="src\asn1\x9\X9ECParametersHolder.cs" />
+    <Compile Include="src\asn1\x9\X9ECPoint.cs" />
+    <Compile Include="src\asn1\x9\X9FieldElement.cs" />
+    <Compile Include="src\asn1\x9\X9FieldID.cs" />
+    <Compile Include="src\asn1\x9\X9IntegerConverter.cs" />
+    <Compile Include="src\asn1\x9\X9ObjectIdentifiers.cs" />
+    <Compile Include="src\AssemblyInfo.cs" />
+    <Compile Include="src\bcpg\ArmoredInputStream.cs" />
+    <Compile Include="src\bcpg\ArmoredOutputStream.cs" />
+    <Compile Include="src\bcpg\attr\ImageAttrib.cs" />
+    <Compile Include="src\bcpg\BcpgInputStream.cs" />
+    <Compile Include="src\bcpg\BcpgObject.cs" />
+    <Compile Include="src\bcpg\BcpgOutputStream.cs" />
+    <Compile Include="src\bcpg\CompressedDataPacket.cs" />
+    <Compile Include="src\bcpg\CompressionAlgorithmTags.cs" />
+    <Compile Include="src\bcpg\ContainedPacket.cs" />
+    <Compile Include="src\bcpg\Crc24.cs" />
+    <Compile Include="src\bcpg\DsaPublicBcpgKey.cs" />
+    <Compile Include="src\bcpg\DsaSecretBcpgKey.cs" />
+    <Compile Include="src\bcpg\ElGamalPublicBcpgKey.cs" />
+    <Compile Include="src\bcpg\ElGamalSecretBcpgKey.cs" />
+    <Compile Include="src\bcpg\ExperimentalPacket.cs" />
+    <Compile Include="src\bcpg\HashAlgorithmTags.cs" />
+    <Compile Include="src\bcpg\IBcpgKey.cs" />
+    <Compile Include="src\bcpg\InputStreamPacket.cs" />
+    <Compile Include="src\bcpg\LiteralDataPacket.cs" />
+    <Compile Include="src\bcpg\MarkerPacket.cs" />
+    <Compile Include="src\bcpg\ModDetectionCodePacket.cs" />
+    <Compile Include="src\bcpg\MPInteger.cs" />
+    <Compile Include="src\bcpg\OnePassSignaturePacket.cs" />
+    <Compile Include="src\bcpg\OutputStreamPacket.cs" />
+    <Compile Include="src\bcpg\Packet.cs" />
+    <Compile Include="src\bcpg\PacketTags.cs" />
+    <Compile Include="src\bcpg\PublicKeyAlgorithmTags.cs" />
+    <Compile Include="src\bcpg\PublicKeyEncSessionPacket.cs" />
+    <Compile Include="src\bcpg\PublicKeyPacket.cs" />
+    <Compile Include="src\bcpg\PublicSubkeyPacket.cs" />
+    <Compile Include="src\bcpg\RsaPublicBcpgKey.cs" />
+    <Compile Include="src\bcpg\RsaSecretBcpgKey.cs" />
+    <Compile Include="src\bcpg\S2k.cs" />
+    <Compile Include="src\bcpg\SecretKeyPacket.cs" />
+    <Compile Include="src\bcpg\SecretSubkeyPacket.cs" />
+    <Compile Include="src\bcpg\SignaturePacket.cs" />
+    <Compile Include="src\bcpg\SignatureSubpacket.cs" />
+    <Compile Include="src\bcpg\SignatureSubpacketsReader.cs" />
+    <Compile Include="src\bcpg\SignatureSubpacketTags.cs" />
+    <Compile Include="src\bcpg\sig\EmbeddedSignature.cs" />
+    <Compile Include="src\bcpg\sig\Exportable.cs" />
+    <Compile Include="src\bcpg\sig\IssuerKeyId.cs" />
+    <Compile Include="src\bcpg\sig\KeyExpirationTime.cs" />
+    <Compile Include="src\bcpg\sig\KeyFlags.cs" />
+    <Compile Include="src\bcpg\sig\NotationData.cs" />
+    <Compile Include="src\bcpg\sig\PreferredAlgorithms.cs" />
+    <Compile Include="src\bcpg\sig\PrimaryUserId.cs" />
+    <Compile Include="src\bcpg\sig\Revocable.cs" />
+    <Compile Include="src\bcpg\sig\RevocationKey.cs" />
+    <Compile Include="src\bcpg\sig\RevocationKeyTags.cs" />
+    <Compile Include="src\bcpg\sig\RevocationReason.cs" />
+    <Compile Include="src\bcpg\sig\RevocationReasonTags.cs" />
+    <Compile Include="src\bcpg\sig\SignatureCreationTime.cs" />
+    <Compile Include="src\bcpg\sig\SignatureExpirationTime.cs" />
+    <Compile Include="src\bcpg\sig\SignerUserId.cs" />
+    <Compile Include="src\bcpg\sig\TrustSignature.cs" />
+    <Compile Include="src\bcpg\SymmetricEncDataPacket.cs" />
+    <Compile Include="src\bcpg\SymmetricEncIntegrityPacket.cs" />
+    <Compile Include="src\bcpg\SymmetricKeyAlgorithmTags.cs" />
+    <Compile Include="src\bcpg\SymmetricKeyEncSessionPacket.cs" />
+    <Compile Include="src\bcpg\TrustPacket.cs" />
+    <Compile Include="src\bcpg\UserAttributePacket.cs" />
+    <Compile Include="src\bcpg\UserAttributeSubpacket.cs" />
+    <Compile Include="src\bcpg\UserAttributeSubpacketsReader.cs" />
+    <Compile Include="src\bcpg\UserAttributeSubpacketTags.cs" />
+    <Compile Include="src\bcpg\UserIdPacket.cs" />
+    <Compile Include="src\cms\BaseDigestCalculator.cs" />
+    <Compile Include="src\cms\CMSAttributeTableGenerationException.cs" />
+    <Compile Include="src\cms\CMSAttributeTableGenerator.cs" />
+    <Compile Include="src\cms\CMSAuthenticatedData.cs" />
+    <Compile Include="src\cms\CMSAuthenticatedDataGenerator.cs" />
+    <Compile Include="src\cms\CMSAuthenticatedDataParser.cs" />
+    <Compile Include="src\cms\CMSAuthenticatedDataStreamGenerator.cs" />
+    <Compile Include="src\cms\CMSAuthenticatedGenerator.cs" />
+    <Compile Include="src\cms\CMSAuthEnvelopedData.cs" />
+    <Compile Include="src\cms\CMSAuthEnvelopedGenerator.cs" />
+    <Compile Include="src\cms\CMSCompressedData.cs" />
+    <Compile Include="src\cms\CMSCompressedDataGenerator.cs" />
+    <Compile Include="src\cms\CMSCompressedDataParser.cs" />
+    <Compile Include="src\cms\CMSCompressedDataStreamGenerator.cs" />
+    <Compile Include="src\cms\CMSContentInfoParser.cs" />
+    <Compile Include="src\cms\CMSEnvelopedData.cs" />
+    <Compile Include="src\cms\CMSEnvelopedDataGenerator.cs" />
+    <Compile Include="src\cms\CMSEnvelopedDataParser.cs" />
+    <Compile Include="src\cms\CMSEnvelopedDataStreamGenerator.cs" />
+    <Compile Include="src\cms\CMSEnvelopedGenerator.cs" />
+    <Compile Include="src\cms\CMSEnvelopedHelper.cs" />
+    <Compile Include="src\cms\CMSException.cs" />
+    <Compile Include="src\cms\CMSPBEKey.cs" />
+    <Compile Include="src\cms\CMSProcessable.cs" />
+    <Compile Include="src\cms\CMSProcessableByteArray.cs" />
+    <Compile Include="src\cms\CMSProcessableFile.cs" />
+    <Compile Include="src\cms\CMSProcessableInputStream.cs" />
+    <Compile Include="src\cms\CMSReadable.cs" />
+    <Compile Include="src\cms\CMSSecureReadable.cs" />
+    <Compile Include="src\cms\CMSSignedData.cs" />
+    <Compile Include="src\cms\CMSSignedDataGenerator.cs" />
+    <Compile Include="src\cms\CMSSignedDataParser.cs" />
+    <Compile Include="src\cms\CMSSignedDataStreamGenerator.cs" />
+    <Compile Include="src\cms\CMSSignedGenerator.cs" />
+    <Compile Include="src\cms\CMSSignedHelper.cs" />
+    <Compile Include="src\cms\CMSStreamException.cs" />
+    <Compile Include="src\cms\CMSTypedStream.cs" />
+    <Compile Include="src\cms\CMSUtils.cs" />
+    <Compile Include="src\cms\CounterSignatureDigestCalculator.cs" />
+    <Compile Include="src\cms\DefaultAuthenticatedAttributeTableGenerator.cs" />
+    <Compile Include="src\cms\DefaultSignedAttributeTableGenerator.cs" />
+    <Compile Include="src\cms\DigOutputStream.cs" />
+    <Compile Include="src\cms\IDigestCalculator.cs" />
+    <Compile Include="src\cms\KEKRecipientInfoGenerator.cs" />
+    <Compile Include="src\cms\KEKRecipientInformation.cs" />
+    <Compile Include="src\cms\KeyAgreeRecipientInfoGenerator.cs" />
+    <Compile Include="src\cms\KeyAgreeRecipientInformation.cs" />
+    <Compile Include="src\cms\KeyTransRecipientInfoGenerator.cs" />
+    <Compile Include="src\cms\KeyTransRecipientInformation.cs" />
+    <Compile Include="src\cms\MacOutputStream.cs" />
+    <Compile Include="src\cms\NullOutputStream.cs" />
+    <Compile Include="src\cms\OriginatorId.cs" />
+    <Compile Include="src\cms\OriginatorInfoGenerator.cs" />
+    <Compile Include="src\cms\OriginatorInformation.cs" />
+    <Compile Include="src\cms\PasswordRecipientInfoGenerator.cs" />
+    <Compile Include="src\cms\PasswordRecipientInformation.cs" />
+    <Compile Include="src\cms\PKCS5Scheme2PBEKey.cs" />
+    <Compile Include="src\cms\PKCS5Scheme2UTF8PBEKey.cs" />
+    <Compile Include="src\cms\RecipientId.cs" />
+    <Compile Include="src\cms\RecipientInfoGenerator.cs" />
+    <Compile Include="src\cms\RecipientInformation.cs" />
+    <Compile Include="src\cms\RecipientInformationStore.cs" />
+    <Compile Include="src\cms\SignerId.cs" />
+    <Compile Include="src\cms\SignerInfoGenerator.cs" />
+    <Compile Include="src\cms\SignerInformation.cs" />
+    <Compile Include="src\cms\SignerInformationStore.cs" />
+    <Compile Include="src\cms\SigOutputStream.cs" />
+    <Compile Include="src\cms\SimpleAttributeTableGenerator.cs" />
+    <Compile Include="src\crypto\agreement\DHAgreement.cs" />
+    <Compile Include="src\crypto\agreement\DHBasicAgreement.cs" />
+    <Compile Include="src\crypto\agreement\ECDHBasicAgreement.cs" />
+    <Compile Include="src\crypto\agreement\ECDHCBasicAgreement.cs" />
+    <Compile Include="src\crypto\agreement\ECDHWithKdfBasicAgreement.cs" />
+    <Compile Include="src\crypto\agreement\ECMqvBasicAgreement.cs" />
+    <Compile Include="src\crypto\agreement\ECMqvWithKdfBasicAgreement.cs" />
+    <Compile Include="src\crypto\agreement\kdf\DHKdfParameters.cs" />
+    <Compile Include="src\crypto\agreement\kdf\DHKekGenerator.cs" />
+    <Compile Include="src\crypto\agreement\kdf\ECDHKekGenerator.cs" />
+    <Compile Include="src\crypto\agreement\srp\SRP6Client.cs" />
+    <Compile Include="src\crypto\agreement\srp\SRP6Server.cs" />
+    <Compile Include="src\crypto\agreement\srp\SRP6Utilities.cs" />
+    <Compile Include="src\crypto\agreement\srp\SRP6VerifierGenerator.cs" />
+    <Compile Include="src\crypto\AsymmetricCipherKeyPair.cs" />
+    <Compile Include="src\crypto\AsymmetricKeyParameter.cs" />
+    <Compile Include="src\crypto\BufferedAeadBlockCipher.cs" />
+    <Compile Include="src\crypto\BufferedAsymmetricBlockCipher.cs" />
+    <Compile Include="src\crypto\BufferedBlockCipher.cs" />
+    <Compile Include="src\crypto\BufferedCipherBase.cs" />
+    <Compile Include="src\crypto\BufferedIesCipher.cs" />
+    <Compile Include="src\crypto\BufferedStreamCipher.cs" />
+    <Compile Include="src\crypto\CipherKeyGenerator.cs" />
+    <Compile Include="src\crypto\CryptoException.cs" />
+    <Compile Include="src\crypto\DataLengthException.cs" />
+    <Compile Include="src\crypto\digests\GeneralDigest.cs" />
+    <Compile Include="src\crypto\digests\GOST3411Digest.cs" />
+    <Compile Include="src\crypto\digests\LongDigest.cs" />
+    <Compile Include="src\crypto\digests\MD2Digest.cs" />
+    <Compile Include="src\crypto\digests\MD4Digest.cs" />
+    <Compile Include="src\crypto\digests\MD5Digest.cs" />
+    <Compile Include="src\crypto\digests\NullDigest.cs" />
+    <Compile Include="src\crypto\digests\RipeMD128Digest.cs" />
+    <Compile Include="src\crypto\digests\RipeMD160Digest.cs" />
+    <Compile Include="src\crypto\digests\RipeMD256Digest.cs" />
+    <Compile Include="src\crypto\digests\RipeMD320Digest.cs" />
+    <Compile Include="src\crypto\digests\Sha1Digest.cs" />
+    <Compile Include="src\crypto\digests\Sha224Digest.cs" />
+    <Compile Include="src\crypto\digests\Sha256Digest.cs" />
+    <Compile Include="src\crypto\digests\Sha384Digest.cs" />
+    <Compile Include="src\crypto\digests\SHA3Digest.cs" />
+    <Compile Include="src\crypto\digests\Sha512Digest.cs" />
+    <Compile Include="src\crypto\digests\ShortenedDigest.cs" />
+    <Compile Include="src\crypto\digests\TigerDigest.cs" />
+    <Compile Include="src\crypto\digests\WhirlpoolDigest.cs" />
+    <Compile Include="src\crypto\encodings\ISO9796d1Encoding.cs" />
+    <Compile Include="src\crypto\encodings\OaepEncoding.cs" />
+    <Compile Include="src\crypto\encodings\Pkcs1Encoding.cs" />
+    <Compile Include="src\crypto\engines\AesEngine.cs" />
+    <Compile Include="src\crypto\engines\AesFastEngine.cs" />
+    <Compile Include="src\crypto\engines\AesLightEngine.cs" />
+    <Compile Include="src\crypto\engines\AesWrapEngine.cs" />
+    <Compile Include="src\crypto\engines\BlowfishEngine.cs" />
+    <Compile Include="src\crypto\engines\CamelliaEngine.cs" />
+    <Compile Include="src\crypto\engines\CamelliaLightEngine.cs" />
+    <Compile Include="src\crypto\engines\CamelliaWrapEngine.cs" />
+    <Compile Include="src\crypto\engines\Cast5Engine.cs" />
+    <Compile Include="src\crypto\engines\Cast6Engine.cs" />
+    <Compile Include="src\crypto\engines\DesEdeEngine.cs" />
+    <Compile Include="src\crypto\engines\DesEdeWrapEngine.cs" />
+    <Compile Include="src\crypto\engines\DesEngine.cs" />
+    <Compile Include="src\crypto\engines\ElGamalEngine.cs" />
+    <Compile Include="src\crypto\engines\GOST28147Engine.cs" />
+    <Compile Include="src\crypto\engines\HC128Engine.cs" />
+    <Compile Include="src\crypto\engines\HC256Engine.cs" />
+    <Compile Include="src\crypto\engines\IdeaEngine.cs" />
+    <Compile Include="src\crypto\engines\IesEngine.cs" />
+    <Compile Include="src\crypto\engines\ISAACEngine.cs" />
+    <Compile Include="src\crypto\engines\NaccacheSternEngine.cs" />
+    <Compile Include="src\crypto\engines\NoekeonEngine.cs" />
+    <Compile Include="src\crypto\engines\NullEngine.cs" />
+    <Compile Include="src\crypto\engines\RC2Engine.cs" />
+    <Compile Include="src\crypto\engines\RC2WrapEngine.cs" />
+    <Compile Include="src\crypto\engines\RC4Engine.cs" />
+    <Compile Include="src\crypto\engines\RC532Engine.cs" />
+    <Compile Include="src\crypto\engines\RC564Engine.cs" />
+    <Compile Include="src\crypto\engines\RC6Engine.cs" />
+    <Compile Include="src\crypto\engines\RFC3211WrapEngine.cs" />
+    <Compile Include="src\crypto\engines\RFC3394WrapEngine.cs" />
+    <Compile Include="src\crypto\engines\RijndaelEngine.cs" />
+    <Compile Include="src\crypto\engines\RSABlindedEngine.cs" />
+    <Compile Include="src\crypto\engines\RSABlindingEngine.cs" />
+    <Compile Include="src\crypto\engines\RSACoreEngine.cs" />
+    <Compile Include="src\crypto\engines\RsaEngine.cs" />
+    <Compile Include="src\crypto\engines\Salsa20Engine.cs" />
+    <Compile Include="src\crypto\engines\SEEDEngine.cs" />
+    <Compile Include="src\crypto\engines\SEEDWrapEngine.cs" />
+    <Compile Include="src\crypto\engines\SerpentEngine.cs" />
+    <Compile Include="src\crypto\engines\SkipjackEngine.cs" />
+    <Compile Include="src\crypto\engines\TEAEngine.cs" />
+    <Compile Include="src\crypto\engines\TwofishEngine.cs" />
+    <Compile Include="src\crypto\engines\VMPCEngine.cs" />
+    <Compile Include="src\crypto\engines\VMPCKSA3Engine.cs" />
+    <Compile Include="src\crypto\engines\XTEAEngine.cs" />
+    <Compile Include="src\crypto\generators\BaseKdfBytesGenerator.cs" />
+    <Compile Include="src\crypto\generators\DesEdeKeyGenerator.cs" />
+    <Compile Include="src\crypto\generators\DesKeyGenerator.cs" />
+    <Compile Include="src\crypto\generators\DHBasicKeyPairGenerator.cs" />
+    <Compile Include="src\crypto\generators\DHKeyGeneratorHelper.cs" />
+    <Compile Include="src\crypto\generators\DHKeyPairGenerator.cs" />
+    <Compile Include="src\crypto\generators\DHParametersGenerator.cs" />
+    <Compile Include="src\crypto\generators\DHParametersHelper.cs" />
+    <Compile Include="src\crypto\generators\DsaKeyPairGenerator.cs" />
+    <Compile Include="src\crypto\generators\DsaParametersGenerator.cs" />
+    <Compile Include="src\crypto\generators\ECKeyPairGenerator.cs" />
+    <Compile Include="src\crypto\generators\ElGamalKeyPairGenerator.cs" />
+    <Compile Include="src\crypto\generators\ElGamalParametersGenerator.cs" />
+    <Compile Include="src\crypto\generators\GOST3410KeyPairGenerator.cs" />
+    <Compile Include="src\crypto\generators\GOST3410ParametersGenerator.cs" />
+    <Compile Include="src\crypto\generators\Kdf1BytesGenerator.cs" />
+    <Compile Include="src\crypto\generators\Kdf2BytesGenerator.cs" />
+    <Compile Include="src\crypto\generators\Mgf1BytesGenerator.cs" />
+    <Compile Include="src\crypto\generators\NaccacheSternKeyPairGenerator.cs" />
+    <Compile Include="src\crypto\generators\OpenSSLPBEParametersGenerator.cs" />
+    <Compile Include="src\crypto\generators\Pkcs12ParametersGenerator.cs" />
+    <Compile Include="src\crypto\generators\Pkcs5S1ParametersGenerator.cs" />
+    <Compile Include="src\crypto\generators\Pkcs5S2ParametersGenerator.cs" />
+    <Compile Include="src\crypto\generators\RSABlindingFactorGenerator.cs" />
+    <Compile Include="src\crypto\generators\RsaKeyPairGenerator.cs" />
+    <Compile Include="src\crypto\generators\SCrypt.cs" />
+    <Compile Include="src\crypto\IAsymmetricBlockCipher.cs" />
+    <Compile Include="src\crypto\IAsymmetricCipherKeyPairGenerator.cs" />
+    <Compile Include="src\crypto\IBasicAgreement.cs" />
+    <Compile Include="src\crypto\IBlockCipher.cs" />
+    <Compile Include="src\crypto\IBufferedCipher.cs" />
+    <Compile Include="src\crypto\ICipherParameters.cs" />
+    <Compile Include="src\crypto\IDerivationFunction.cs" />
+    <Compile Include="src\crypto\IDerivationParameters.cs" />
+    <Compile Include="src\crypto\IDigest.cs" />
+    <Compile Include="src\crypto\IDSA.cs" />
+    <Compile Include="src\crypto\IMac.cs" />
+    <Compile Include="src\crypto\InvalidCipherTextException.cs" />
+    <Compile Include="src\crypto\io\CipherStream.cs" />
+    <Compile Include="src\crypto\io\DigestStream.cs" />
+    <Compile Include="src\crypto\io\MacStream.cs" />
+    <Compile Include="src\crypto\io\SignerStream.cs" />
+    <Compile Include="src\crypto\ISigner.cs" />
+    <Compile Include="src\crypto\ISignerWithRecovery.cs" />
+    <Compile Include="src\crypto\IStreamCipher.cs" />
+    <Compile Include="src\crypto\IWrapper.cs" />
+    <Compile Include="src\crypto\KeyGenerationParameters.cs" />
+    <Compile Include="src\crypto\macs\CbcBlockCipherMac.cs" />
+    <Compile Include="src\crypto\macs\CfbBlockCipherMac.cs" />
+    <Compile Include="src\crypto\macs\CMac.cs" />
+    <Compile Include="src\crypto\macs\GOST28147Mac.cs" />
+    <Compile Include="src\crypto\macs\HMac.cs" />
+    <Compile Include="src\crypto\macs\ISO9797Alg3Mac.cs" />
+    <Compile Include="src\crypto\macs\VMPCMac.cs" />
+    <Compile Include="src\crypto\MaxBytesExceededException.cs" />
+    <Compile Include="src\crypto\modes\CbcBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\CcmBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\CfbBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\CtsBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\EAXBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\GCMBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\gcm\BasicGcmExponentiator.cs" />
+    <Compile Include="src\crypto\modes\gcm\BasicGcmMultiplier.cs" />
+    <Compile Include="src\crypto\modes\gcm\GcmUtilities.cs" />
+    <Compile Include="src\crypto\modes\gcm\IGcmExponentiator.cs" />
+    <Compile Include="src\crypto\modes\gcm\IGcmMultiplier.cs" />
+    <Compile Include="src\crypto\modes\gcm\Tables1kGcmExponentiator.cs" />
+    <Compile Include="src\crypto\modes\gcm\Tables64kGcmMultiplier.cs" />
+    <Compile Include="src\crypto\modes\gcm\Tables8kGcmMultiplier.cs" />
+    <Compile Include="src\crypto\modes\GOFBBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\IAeadBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\OfbBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\OpenPgpCfbBlockCipher.cs" />
+    <Compile Include="src\crypto\modes\SicBlockCipher.cs" />
+    <Compile Include="src\crypto\paddings\BlockCipherPadding.cs" />
+    <Compile Include="src\crypto\paddings\ISO10126d2Padding.cs" />
+    <Compile Include="src\crypto\paddings\ISO7816d4Padding.cs" />
+    <Compile Include="src\crypto\paddings\PaddedBufferedBlockCipher.cs" />
+    <Compile Include="src\crypto\paddings\Pkcs7Padding.cs" />
+    <Compile Include="src\crypto\paddings\TbcPadding.cs" />
+    <Compile Include="src\crypto\paddings\X923Padding.cs" />
+    <Compile Include="src\crypto\paddings\ZeroBytePadding.cs" />
+    <Compile Include="src\crypto\parameters\AEADParameters.cs" />
+    <Compile Include="src\crypto\parameters\CcmParameters.cs" />
+    <Compile Include="src\crypto\parameters\DesEdeParameters.cs" />
+    <Compile Include="src\crypto\parameters\DesParameters.cs" />
+    <Compile Include="src\crypto\parameters\DHKeyGenerationParameters.cs" />
+    <Compile Include="src\crypto\parameters\DHKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\DHParameters.cs" />
+    <Compile Include="src\crypto\parameters\DHPrivateKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\DHPublicKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\DHValidationParameters.cs" />
+    <Compile Include="src\crypto\parameters\DsaKeyGenerationParameters.cs" />
+    <Compile Include="src\crypto\parameters\DsaKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\DsaParameters.cs" />
+    <Compile Include="src\crypto\parameters\DsaPrivateKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\DsaPublicKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\DsaValidationParameters.cs" />
+    <Compile Include="src\crypto\parameters\ECDomainParameters.cs" />
+    <Compile Include="src\crypto\parameters\ECKeyGenerationParameters.cs" />
+    <Compile Include="src\crypto\parameters\ECKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\ECPrivateKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\ECPublicKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\ElGamalKeyGenerationParameters.cs" />
+    <Compile Include="src\crypto\parameters\ElGamalKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\ElGamalParameters.cs" />
+    <Compile Include="src\crypto\parameters\ElGamalPrivateKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\ElGamalPublicKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\GOST3410KeyGenerationParameters.cs" />
+    <Compile Include="src\crypto\parameters\GOST3410KeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\GOST3410Parameters.cs" />
+    <Compile Include="src\crypto\parameters\GOST3410PrivateKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\GOST3410PublicKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\GOST3410ValidationParameters.cs" />
+    <Compile Include="src\crypto\parameters\IesParameters.cs" />
+    <Compile Include="src\crypto\parameters\IesWithCipherParameters.cs" />
+    <Compile Include="src\crypto\parameters\ISO18033KDFParameters.cs" />
+    <Compile Include="src\crypto\parameters\KdfParameters.cs" />
+    <Compile Include="src\crypto\parameters\KeyParameter.cs" />
+    <Compile Include="src\crypto\parameters\MgfParameters.cs" />
+    <Compile Include="src\crypto\parameters\MqvPrivateParameters.cs" />
+    <Compile Include="src\crypto\parameters\MqvPublicParameters.cs" />
+    <Compile Include="src\crypto\parameters\NaccacheSternKeyGenerationParameters.cs" />
+    <Compile Include="src\crypto\parameters\NaccacheSternKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\NaccacheSternPrivateKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\ParametersWithIV.cs" />
+    <Compile Include="src\crypto\parameters\ParametersWithRandom.cs" />
+    <Compile Include="src\crypto\parameters\ParametersWithSalt.cs" />
+    <Compile Include="src\crypto\parameters\ParametersWithSBox.cs" />
+    <Compile Include="src\crypto\parameters\RC2Parameters.cs" />
+    <Compile Include="src\crypto\parameters\RC5Parameters.cs" />
+    <Compile Include="src\crypto\parameters\RSABlindingParameters.cs" />
+    <Compile Include="src\crypto\parameters\RsaKeyGenerationParameters.cs" />
+    <Compile Include="src\crypto\parameters\RsaKeyParameters.cs" />
+    <Compile Include="src\crypto\parameters\RsaPrivateCrtKeyParameters.cs" />
+    <Compile Include="src\crypto\PbeParametersGenerator.cs" />
+    <Compile Include="src\crypto\prng\CryptoApiRandomGenerator.cs" />
+    <Compile Include="src\crypto\prng\DigestRandomGenerator.cs" />
+    <Compile Include="src\crypto\prng\IRandomGenerator.cs" />
+    <Compile Include="src\crypto\prng\ReversedWindowGenerator.cs" />
+    <Compile Include="src\crypto\prng\ThreadedSeedGenerator.cs" />
+    <Compile Include="src\crypto\prng\VMPCRandomGenerator.cs" />
+    <Compile Include="src\crypto\signers\DsaDigestSigner.cs" />
+    <Compile Include="src\crypto\signers\DsaSigner.cs" />
+    <Compile Include="src\crypto\signers\ECDsaSigner.cs" />
+    <Compile Include="src\crypto\signers\ECGOST3410Signer.cs" />
+    <Compile Include="src\crypto\signers\ECNRSigner.cs" />
+    <Compile Include="src\crypto\signers\GenericSigner.cs" />
+    <Compile Include="src\crypto\signers\GOST3410DigestSigner.cs" />
+    <Compile Include="src\crypto\signers\GOST3410Signer.cs" />
+    <Compile Include="src\crypto\signers\Iso9796d2PssSigner.cs" />
+    <Compile Include="src\crypto\signers\Iso9796d2Signer.cs" />
+    <Compile Include="src\crypto\signers\PssSigner.cs" />
+    <Compile Include="src\crypto\signers\RsaDigestSigner.cs" />
+    <Compile Include="src\crypto\StreamBlockCipher.cs" />
+    <Compile Include="src\crypto\tls\AlertDescription.cs" />
+    <Compile Include="src\crypto\tls\AlertLevel.cs" />
+    <Compile Include="src\crypto\tls\AlwaysValidVerifyer.cs" />
+    <Compile Include="src\crypto\tls\ByteQueue.cs" />
+    <Compile Include="src\crypto\tls\Certificate.cs" />
+    <Compile Include="src\crypto\tls\CertificateRequest.cs" />
+    <Compile Include="src\crypto\tls\CipherSuite.cs" />
+    <Compile Include="src\crypto\tls\ClientCertificateType.cs" />
+    <Compile Include="src\crypto\tls\CombinedHash.cs" />
+    <Compile Include="src\crypto\tls\CompressionMethod.cs" />
+    <Compile Include="src\crypto\tls\ContentType.cs" />
+    <Compile Include="src\crypto\tls\DefaultTlsAgreementCredentials.cs" />
+    <Compile Include="src\crypto\tls\DefaultTlsCipherFactory.cs" />
+    <Compile Include="src\crypto\tls\DefaultTlsClient.cs" />
+    <Compile Include="src\crypto\tls\DefaultTlsSignerCredentials.cs" />
+    <Compile Include="src\crypto\tls\DigestAlgorithm.cs" />
+    <Compile Include="src\crypto\tls\ECCurveType.cs" />
+    <Compile Include="src\crypto\tls\ECPointFormat.cs" />
+    <Compile Include="src\crypto\tls\EncryptionAlgorithm.cs" />
+    <Compile Include="src\crypto\tls\ExtensionType.cs" />
+    <Compile Include="src\crypto\tls\HandshakeType.cs" />
+    <Compile Include="src\crypto\tls\ICertificateVerifyer.cs" />
+    <Compile Include="src\crypto\tls\KeyExchangeAlgorithm.cs" />
+    <Compile Include="src\crypto\tls\LegacyTlsAuthentication.cs" />
+    <Compile Include="src\crypto\tls\LegacyTlsClient.cs" />
+    <Compile Include="src\crypto\tls\NamedCurve.cs" />
+    <Compile Include="src\crypto\tls\PskTlsClient.cs" />
+    <Compile Include="src\crypto\tls\RecordStream.cs" />
+    <Compile Include="src\crypto\tls\SecurityParameters.cs" />
+    <Compile Include="src\crypto\tls\SrpTlsClient.cs" />
+    <Compile Include="src\crypto\tls\Ssl3Mac.cs" />
+    <Compile Include="src\crypto\tls\TlsAgreementCredentials.cs" />
+    <Compile Include="src\crypto\tls\TlsAuthentication.cs" />
+    <Compile Include="src\crypto\tls\TlsBlockCipher.cs" />
+    <Compile Include="src\crypto\tls\TlsCipher.cs" />
+    <Compile Include="src\crypto\tls\TlsCipherFactory.cs" />
+    <Compile Include="src\crypto\tls\TlsClient.cs" />
+    <Compile Include="src\crypto\tls\TlsClientContext.cs" />
+    <Compile Include="src\crypto\tls\TlsClientContextImpl.cs" />
+    <Compile Include="src\crypto\tls\TlsCompression.cs" />
+    <Compile Include="src\crypto\tls\TlsCredentials.cs" />
+    <Compile Include="src\crypto\tls\TlsDeflateCompression.cs" />
+    <Compile Include="src\crypto\tls\TlsDheKeyExchange.cs" />
+    <Compile Include="src\crypto\tls\TlsDHKeyExchange.cs" />
+    <Compile Include="src\crypto\tls\TlsDHUtilities.cs" />
+    <Compile Include="src\crypto\tls\TlsDsaSigner.cs" />
+    <Compile Include="src\crypto\tls\TlsDssSigner.cs" />
+    <Compile Include="src\crypto\tls\TlsECDheKeyExchange.cs" />
+    <Compile Include="src\crypto\tls\TlsECDHKeyExchange.cs" />
+    <Compile Include="src\crypto\tls\TlsECDsaSigner.cs" />
+    <Compile Include="src\crypto\tls\TlsException.cs" />
+    <Compile Include="src\crypto\tls\TlsFatalAlert.cs" />
+    <Compile Include="src\crypto\tls\TlsKeyExchange.cs" />
+    <Compile Include="src\crypto\tls\TlsMac.cs" />
+    <Compile Include="src\crypto\tls\TlsNullCipher.cs" />
+    <Compile Include="src\crypto\tls\TlsNullCompression.cs" />
+    <Compile Include="src\crypto\tls\TlsProtocolHandler.cs" />
+    <Compile Include="src\crypto\tls\TlsPskIdentity.cs" />
+    <Compile Include="src\crypto\tls\TlsPskKeyExchange.cs" />
+    <Compile Include="src\crypto\tls\TlsRsaKeyExchange.cs" />
+    <Compile Include="src\crypto\tls\TlsRsaSigner.cs" />
+    <Compile Include="src\crypto\tls\TlsRsaUtilities.cs" />
+    <Compile Include="src\crypto\tls\TlsSigner.cs" />
+    <Compile Include="src\crypto\tls\TlsSignerCredentials.cs" />
+    <Compile Include="src\crypto\tls\TlsSrpKeyExchange.cs" />
+    <Compile Include="src\crypto\tls\TlsStream.cs" />
+    <Compile Include="src\crypto\tls\TlsStreamCipher.cs" />
+    <Compile Include="src\crypto\tls\TlsUtilities.cs" />
+    <Compile Include="src\crypto\util\Pack.cs" />
+    <Compile Include="src\math\BigInteger.cs" />
+    <Compile Include="src\math\ec\abc\SimpleBigDecimal.cs" />
+    <Compile Include="src\math\ec\abc\Tnaf.cs" />
+    <Compile Include="src\math\ec\abc\ZTauElement.cs" />
+    <Compile Include="src\math\ec\ECAlgorithms.cs" />
+    <Compile Include="src\math\ec\ECCurve.cs" />
+    <Compile Include="src\math\ec\ECFieldElement.cs" />
+    <Compile Include="src\math\ec\ECPoint.cs" />
+    <Compile Include="src\math\ec\IntArray.cs" />
+    <Compile Include="src\math\ec\multiplier\ECMultiplier.cs" />
+    <Compile Include="src\math\ec\multiplier\FpNafMultiplier.cs" />
+    <Compile Include="src\math\ec\multiplier\PreCompInfo.cs" />
+    <Compile Include="src\math\ec\multiplier\ReferenceMultiplier.cs" />
+    <Compile Include="src\math\ec\multiplier\WNafMultiplier.cs" />
+    <Compile Include="src\math\ec\multiplier\WNafPreCompInfo.cs" />
+    <Compile Include="src\math\ec\multiplier\WTauNafMultiplier.cs" />
+    <Compile Include="src\math\ec\multiplier\WTauNafPreCompInfo.cs" />
+    <Compile Include="src\ocsp\BasicOCSPResp.cs" />
+    <Compile Include="src\ocsp\BasicOCSPRespGenerator.cs" />
+    <Compile Include="src\ocsp\CertificateID.cs" />
+    <Compile Include="src\ocsp\CertificateStatus.cs" />
+    <Compile Include="src\ocsp\OCSPException.cs" />
+    <Compile Include="src\ocsp\OCSPReq.cs" />
+    <Compile Include="src\ocsp\OCSPReqGenerator.cs" />
+    <Compile Include="src\ocsp\OCSPResp.cs" />
+    <Compile Include="src\ocsp\OCSPRespGenerator.cs" />
+    <Compile Include="src\ocsp\OCSPRespStatus.cs" />
+    <Compile Include="src\ocsp\OCSPUtil.cs" />
+    <Compile Include="src\ocsp\Req.cs" />
+    <Compile Include="src\ocsp\RespData.cs" />
+    <Compile Include="src\ocsp\RespID.cs" />
+    <Compile Include="src\ocsp\RevokedStatus.cs" />
+    <Compile Include="src\ocsp\SingleResp.cs" />
+    <Compile Include="src\ocsp\UnknownStatus.cs" />
+    <Compile Include="src\openpgp\IStreamGenerator.cs" />
+    <Compile Include="src\openpgp\PgpCompressedData.cs" />
+    <Compile Include="src\openpgp\PgpCompressedDataGenerator.cs" />
+    <Compile Include="src\openpgp\PgpDataValidationException.cs" />
+    <Compile Include="src\openpgp\PgpEncryptedData.cs" />
+    <Compile Include="src\openpgp\PgpEncryptedDataGenerator.cs" />
+    <Compile Include="src\openpgp\PgpEncryptedDataList.cs" />
+    <Compile Include="src\openpgp\PgpException.cs" />
+    <Compile Include="src\openpgp\PgpExperimental.cs" />
+    <Compile Include="src\openpgp\PgpKeyFlags.cs" />
+    <Compile Include="src\openpgp\PgpKeyPair.cs" />
+    <Compile Include="src\openpgp\PGPKeyRing.cs" />
+    <Compile Include="src\openpgp\PgpKeyRingGenerator.cs" />
+    <Compile Include="src\openpgp\PgpKeyValidationException.cs" />
+    <Compile Include="src\openpgp\PgpLiteralData.cs" />
+    <Compile Include="src\openpgp\PgpLiteralDataGenerator.cs" />
+    <Compile Include="src\openpgp\PgpMarker.cs" />
+    <Compile Include="src\openpgp\PGPObject.cs" />
+    <Compile Include="src\openpgp\PgpObjectFactory.cs" />
+    <Compile Include="src\openpgp\PgpOnePassSignature.cs" />
+    <Compile Include="src\openpgp\PgpOnePassSignatureList.cs" />
+    <Compile Include="src\openpgp\PgpPbeEncryptedData.cs" />
+    <Compile Include="src\openpgp\PgpPrivateKey.cs" />
+    <Compile Include="src\openpgp\PgpPublicKey.cs" />
+    <Compile Include="src\openpgp\PgpPublicKeyEncryptedData.cs" />
+    <Compile Include="src\openpgp\PgpPublicKeyRing.cs" />
+    <Compile Include="src\openpgp\PgpPublicKeyRingBundle.cs" />
+    <Compile Include="src\openpgp\PgpSecretKey.cs" />
+    <Compile Include="src\openpgp\PgpSecretKeyRing.cs" />
+    <Compile Include="src\openpgp\PgpSecretKeyRingBundle.cs" />
+    <Compile Include="src\openpgp\PgpSignature.cs" />
+    <Compile Include="src\openpgp\PgpSignatureGenerator.cs" />
+    <Compile Include="src\openpgp\PgpSignatureList.cs" />
+    <Compile Include="src\openpgp\PgpSignatureSubpacketGenerator.cs" />
+    <Compile Include="src\openpgp\PgpSignatureSubpacketVector.cs" />
+    <Compile Include="src\openpgp\PgpUserAttributeSubpacketVector.cs" />
+    <Compile Include="src\openpgp\PGPUserAttributeSubpacketVectorGenerator.cs" />
+    <Compile Include="src\openpgp\PgpUtilities.cs" />
+    <Compile Include="src\openpgp\PgpV3SignatureGenerator.cs" />
+    <Compile Include="src\openpgp\WrappedGeneratorStream.cs" />
+    <Compile Include="src\openssl\EncryptionException.cs" />
+    <Compile Include="src\openssl\IPasswordFinder.cs" />
+    <Compile Include="src\openssl\MiscPemGenerator.cs" />
+    <Compile Include="src\openssl\PasswordException.cs" />
+    <Compile Include="src\openssl\PEMException.cs" />
+    <Compile Include="src\openssl\PEMReader.cs" />
+    <Compile Include="src\openssl\PEMUtilities.cs" />
+    <Compile Include="src\openssl\PEMWriter.cs" />
+    <Compile Include="src\openssl\Pkcs8Generator.cs" />
+    <Compile Include="src\pkcs\AsymmetricKeyEntry.cs" />
+    <Compile Include="src\pkcs\EncryptedPrivateKeyInfoFactory.cs" />
+    <Compile Include="src\pkcs\Pkcs10CertificationRequest.cs" />
+    <Compile Include="src\pkcs\Pkcs10CertificationRequestDelaySigned.cs" />
+    <Compile Include="src\pkcs\Pkcs12Entry.cs" />
+    <Compile Include="src\pkcs\Pkcs12Store.cs" />
+    <Compile Include="src\pkcs\PKCS12StoreBuilder.cs" />
+    <Compile Include="src\pkcs\Pkcs12Utilities.cs" />
+    <Compile Include="src\pkcs\PrivateKeyInfoFactory.cs" />
+    <Compile Include="src\pkcs\X509CertificateEntry.cs" />
+    <Compile Include="src\pkix\CertStatus.cs" />
+    <Compile Include="src\pkix\PkixAttrCertChecker.cs" />
+    <Compile Include="src\pkix\PkixAttrCertPathBuilder.cs" />
+    <Compile Include="src\pkix\PkixAttrCertPathValidator.cs" />
+    <Compile Include="src\pkix\PkixBuilderParameters.cs" />
+    <Compile Include="src\pkix\PkixCertPath.cs" />
+    <Compile Include="src\pkix\PkixCertPathBuilder.cs" />
+    <Compile Include="src\pkix\PkixCertPathBuilderException.cs" />
+    <Compile Include="src\pkix\PkixCertPathBuilderResult.cs" />
+    <Compile Include="src\pkix\PkixCertPathChecker.cs" />
+    <Compile Include="src\pkix\PkixCertPathValidator.cs" />
+    <Compile Include="src\pkix\PkixCertPathValidatorException.cs" />
+    <Compile Include="src\pkix\PkixCertPathValidatorResult.cs" />
+    <Compile Include="src\pkix\PkixCertPathValidatorUtilities.cs" />
+    <Compile Include="src\pkix\PkixCrlUtilities.cs" />
+    <Compile Include="src\pkix\PkixNameConstraintValidator.cs" />
+    <Compile Include="src\pkix\PkixNameConstraintValidatorException.cs" />
+    <Compile Include="src\pkix\PkixParameters.cs" />
+    <Compile Include="src\pkix\PkixPolicyNode.cs" />
+    <Compile Include="src\pkix\ReasonsMask.cs" />
+    <Compile Include="src\pkix\Rfc3280CertPathUtilities.cs" />
+    <Compile Include="src\pkix\Rfc3281CertPathUtilities.cs" />
+    <Compile Include="src\pkix\TrustAnchor.cs" />
+    <Compile Include="src\security\AgreementUtilities.cs" />
+    <Compile Include="src\security\cert\CertificateEncodingException.cs" />
+    <Compile Include="src\security\cert\CertificateException.cs" />
+    <Compile Include="src\security\cert\CertificateExpiredException.cs" />
+    <Compile Include="src\security\cert\CertificateNotYetValidException.cs" />
+    <Compile Include="src\security\cert\CertificateParsingException.cs" />
+    <Compile Include="src\security\cert\CrlException.cs" />
+    <Compile Include="src\security\CipherUtilities.cs" />
+    <Compile Include="src\security\DigestUtilities.cs" />
+    <Compile Include="src\security\DotNetUtilities.cs" />
+    <Compile Include="src\security\GeneralSecurityException.cs" />
+    <Compile Include="src\security\GeneratorUtilities.cs" />
+    <Compile Include="src\security\InvalidKeyException.cs" />
+    <Compile Include="src\security\InvalidParameterException.cs" />
+    <Compile Include="src\security\KeyException.cs" />
+    <Compile Include="src\security\MacUtilities.cs" />
+    <Compile Include="src\security\NoSuchAlgorithmException.cs" />
+    <Compile Include="src\security\ParameterUtilities.cs" />
+    <Compile Include="src\security\PbeUtilities.cs" />
+    <Compile Include="src\security\PrivateKeyFactory.cs" />
+    <Compile Include="src\security\PublicKeyFactory.cs" />
+    <Compile Include="src\security\SecureRandom.cs" />
+    <Compile Include="src\security\SecurityUtilityException.cs" />
+    <Compile Include="src\security\SignatureException.cs" />
+    <Compile Include="src\security\SignerUtilities.cs" />
+    <Compile Include="src\security\WrapperUtilities.cs" />
+    <Compile Include="src\tsp\GenTimeAccuracy.cs" />
+    <Compile Include="src\tsp\TimeStampRequest.cs" />
+    <Compile Include="src\tsp\TimeStampRequestGenerator.cs" />
+    <Compile Include="src\tsp\TimeStampResponse.cs" />
+    <Compile Include="src\tsp\TimeStampResponseGenerator.cs" />
+    <Compile Include="src\tsp\TimeStampToken.cs" />
+    <Compile Include="src\tsp\TimeStampTokenGenerator.cs" />
+    <Compile Include="src\tsp\TimeStampTokenInfo.cs" />
+    <Compile Include="src\tsp\TSPAlgorithms.cs" />
+    <Compile Include="src\tsp\TSPException.cs" />
+    <Compile Include="src\tsp\TSPUtil.cs" />
+    <Compile Include="src\tsp\TSPValidationException.cs" />
+    <Compile Include="src\util\Arrays.cs" />
+    <Compile Include="src\util\BigIntegers.cs" />
+    <Compile Include="src\util\collections\CollectionUtilities.cs" />
+    <Compile Include="src\util\collections\EmptyEnumerable.cs" />
+    <Compile Include="src\util\collections\EnumerableProxy.cs" />
+    <Compile Include="src\util\collections\HashSet.cs" />
+    <Compile Include="src\util\collections\ISet.cs" />
+    <Compile Include="src\util\collections\LinkedDictionary.cs" />
+    <Compile Include="src\util\collections\UnmodifiableDictionary.cs" />
+    <Compile Include="src\util\collections\UnmodifiableDictionaryProxy.cs" />
+    <Compile Include="src\util\collections\UnmodifiableList.cs" />
+    <Compile Include="src\util\collections\UnmodifiableListProxy.cs" />
+    <Compile Include="src\util\collections\UnmodifiableSet.cs" />
+    <Compile Include="src\util\collections\UnmodifiableSetProxy.cs" />
+    <Compile Include="src\util\date\DateTimeObject.cs" />
+    <Compile Include="src\util\date\DateTimeUtilities.cs" />
+    <Compile Include="src\util\encoders\Base64.cs" />
+    <Compile Include="src\util\encoders\Base64Encoder.cs" />
+    <Compile Include="src\util\encoders\BufferedDecoder.cs" />
+    <Compile Include="src\util\encoders\BufferedEncoder.cs" />
+    <Compile Include="src\util\encoders\Hex.cs" />
+    <Compile Include="src\util\encoders\HexEncoder.cs" />
+    <Compile Include="src\util\encoders\HexTranslator.cs" />
+    <Compile Include="src\util\encoders\IEncoder.cs" />
+    <Compile Include="src\util\encoders\Translator.cs" />
+    <Compile Include="src\util\encoders\UrlBase64.cs" />
+    <Compile Include="src\util\encoders\UrlBase64Encoder.cs" />
+    <Compile Include="src\util\Enums.cs" />
+    <Compile Include="src\util\io\BaseInputStream.cs" />
+    <Compile Include="src\util\io\BaseOutputStream.cs" />
+    <Compile Include="src\util\io\pem\PemGenerationException.cs" />
+    <Compile Include="src\util\io\pem\PemHeader.cs" />
+    <Compile Include="src\util\io\pem\PemObject.cs" />
+    <Compile Include="src\util\io\pem\PemObjectGenerator.cs" />
+    <Compile Include="src\util\io\pem\PemObjectParser.cs" />
+    <Compile Include="src\util\io\pem\PemReader.cs" />
+    <Compile Include="src\util\io\pem\PemWriter.cs" />
+    <Compile Include="src\util\io\PushbackStream.cs" />
+    <Compile Include="src\util\io\StreamOverflowException.cs" />
+    <Compile Include="src\util\io\Streams.cs" />
+    <Compile Include="src\util\io\TeeInputStream.cs" />
+    <Compile Include="src\util\io\TeeOutputStream.cs" />
+    <Compile Include="src\util\net\IPAddress.cs" />
+    <Compile Include="src\util\Platform.cs" />
+    <Compile Include="src\util\Strings.cs" />
+    <Compile Include="src\util\zlib\Adler32.cs" />
+    <Compile Include="src\util\zlib\Deflate.cs" />
+    <Compile Include="src\util\zlib\InfBlocks.cs" />
+    <Compile Include="src\util\zlib\InfCodes.cs" />
+    <Compile Include="src\util\zlib\Inflate.cs" />
+    <Compile Include="src\util\zlib\InfTree.cs" />
+    <Compile Include="src\util\zlib\JZlib.cs" />
+    <Compile Include="src\util\zlib\StaticTree.cs" />
+    <Compile Include="src\util\zlib\Tree.cs" />
+    <Compile Include="src\util\zlib\ZDeflaterOutputStream.cs" />
+    <Compile Include="src\util\zlib\ZInflaterInputStream.cs" />
+    <Compile Include="src\util\zlib\ZInputStream.cs" />
+    <Compile Include="src\util\zlib\ZOutputStream.cs" />
+    <Compile Include="src\util\zlib\ZStream.cs" />
+    <Compile Include="src\x509\AttributeCertificateHolder.cs" />
+    <Compile Include="src\x509\AttributeCertificateIssuer.cs" />
+    <Compile Include="src\x509\extension\AuthorityKeyIdentifierStructure.cs" />
+    <Compile Include="src\x509\extension\SubjectKeyIdentifierStructure.cs" />
+    <Compile Include="src\x509\extension\X509ExtensionUtil.cs" />
+    <Compile Include="src\x509\IX509AttributeCertificate.cs" />
+    <Compile Include="src\x509\IX509Extension.cs" />
+    <Compile Include="src\x509\PEMParser.cs" />
+    <Compile Include="src\x509\PrincipalUtil.cs" />
+    <Compile Include="src\x509\store\IX509Selector.cs" />
+    <Compile Include="src\x509\store\IX509Store.cs" />
+    <Compile Include="src\x509\store\IX509StoreParameters.cs" />
+    <Compile Include="src\x509\store\NoSuchStoreException.cs" />
+    <Compile Include="src\x509\store\X509AttrCertStoreSelector.cs" />
+    <Compile Include="src\x509\store\X509CertPairStoreSelector.cs" />
+    <Compile Include="src\x509\store\X509CertStoreSelector.cs" />
+    <Compile Include="src\x509\store\X509CollectionStore.cs" />
+    <Compile Include="src\x509\store\X509CollectionStoreParameters.cs" />
+    <Compile Include="src\x509\store\X509CrlStoreSelector.cs" />
+    <Compile Include="src\x509\store\X509StoreException.cs" />
+    <Compile Include="src\x509\store\X509StoreFactory.cs" />
+    <Compile Include="src\x509\SubjectPublicKeyInfoFactory.cs" />
+    <Compile Include="src\x509\X509AttrCertParser.cs" />
+    <Compile Include="src\x509\X509Attribute.cs" />
+    <Compile Include="src\x509\X509Certificate.cs" />
+    <Compile Include="src\x509\X509CertificatePair.cs" />
+    <Compile Include="src\x509\X509CertificateParser.cs" />
+    <Compile Include="src\x509\X509CertPairParser.cs" />
+    <Compile Include="src\x509\X509Crl.cs" />
+    <Compile Include="src\x509\X509CrlEntry.cs" />
+    <Compile Include="src\x509\X509CrlParser.cs" />
+    <Compile Include="src\x509\X509ExtensionBase.cs" />
+    <Compile Include="src\x509\X509KeyUsage.cs" />
+    <Compile Include="src\x509\X509SignatureUtil.cs" />
+    <Compile Include="src\x509\X509Utilities.cs" />
+    <Compile Include="src\x509\X509V1CertificateGenerator.cs" />
+    <Compile Include="src\x509\X509V2AttributeCertificate.cs" />
+    <Compile Include="src\x509\X509V2AttributeCertificateGenerator.cs" />
+    <Compile Include="src\x509\X509V2CRLGenerator.cs" />
+    <Compile Include="src\x509\X509V3CertificateGenerator.cs" />
+  </ItemGroup>
+  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
+  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
+       Other similar extension points exist, see Microsoft.Common.targets.
+  <Target Name="BeforeBuild">
+  </Target>
+  <Target Name="AfterBuild">
+  </Target>
+  -->
+</Project>


